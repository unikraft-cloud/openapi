{
  "openapi": "3.1.0",
  "info": {
    "title": "Unikraft Cloud Platform",
    "version": "0.6.0",
    "description": "This is the API of the Unikraft Cloud Platform.\n",
    "license": {
      "name": "UNLICENSED",
      "url": "https://unikraft.cloud/company/terms"
    },
    "contact": {
      "name": "Unikraft Cloud Support",
      "email": "info@unikraft.cloud",
      "url": "https://unikraft.cloud/contact"
    }
  },
  "servers": [
    {
      "url": "https://api.{metro}.kraft.cloud/v1",
      "description": "The Unikraft Cloud Platform API server",
      "variables": {
        "metro": {
          "default": "fra0",
          "enum": [
            "fra0",
            "sin0",
            "dal0",
            "was1"
          ]
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "certificate": {
        "type": "object",
        "description": "SSL Certificate.\n",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "failure"
            ],
            "example": "success",
            "description": "The status of the response.\n\nNote: Not when listing all existing certificates.\n"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "maxLength": 36,
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
            "description": "The UUID of the certificate.\n"
          },
          "name": {
            "type": "string",
            "format": "basename",
            "maxLength": 255,
            "example": "my-certificate",
            "description": "The name of the certificate.\n"
          },
          "created_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-09-01T12:00:00Z",
            "description": "Date and time of creation in ISO8601.\n"
          },
          "common_name": {
            "type": "string",
            "format": "basename",
            "maxLength": 255,
            "example": "example.com",
            "description": "Common name (CN) of the certificate.\n"
          },
          "state": {
            "type": "string",
            "enum": [
              "valid",
              "pending",
              "error"
            ],
            "example": "valid",
            "description": "Current state of the certificate.\n\nA certificate can be in one of the following states:\n\nState     | Description\n----------|------------\n`pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal.\n`valid`   | The certificate is valid and can be used for services.\n`error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let’s Encrypt™ quota limits, or the domain validation process failed for some other reason. There won’t be any further automatic attempts. If you need assistence please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).\n"
          },
          "validation": {
            "type": "object",
            "description": "Validation status (only while `pending`).\n",
            "properties": {
              "attempt": {
                "type": "integer",
                "format": "int32",
                "example": 3,
                "minimum": 0,
                "maximum": 255,
                "description": "Number of validation attempts made.\n"
              },
              "next": {
                "type": "string",
                "maxLength": 8388608,
                "format": "date-time",
                "example": "2021-09-01T12:00:00Z",
                "description": "Date and time of the next validation attempt in ISO8601.\n"
              }
            }
          },
          "subject": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^[a-zA-Z]+?=(?:(?![a-zA-Z]+?=.*?).)*$",
            "example": "CN=example.com",
            "description": "Certificate subject.\n"
          },
          "issuer": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^([a-zA-Z]+?=(?:(?![a-zA-Z]+?=.*?).)*,*)*$",
            "example": "CN=R3,O=Let's Encrypt,C=US",
            "description": "Certificate issuer.\n"
          },
          "serial_number": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^[0-9a-fA-F]{1,64}$",
            "example": "1A2B3C4D5E6F7A8B9C0D1E2F3A4B5C6D7E8F",
            "description": "Certificate serial number.\n"
          },
          "not_before": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-09-01T12:00:00Z",
            "description": "Date and time of beginning of validity in ISO8601.\n"
          },
          "not_after": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2022-09-01T12:00:00Z",
            "description": "Expiration date and time in ISO8601.\n"
          },
          "service_groups": {
            "type": "array",
            "maxItems": 253,
            "description": "Services using this certificate.\n",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "description": "The UUID of the service.\n",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "basename",
                  "description": "The name of the service.\n",
                  "example": "young-monkey-uq6dxq0u"
                }
              }
            }
          }
        }
      },
      "image": {
        "type": "object",
        "properties": {
          "digest": {
            "type": "string",
            "maxLength": 8388608,
            "example": "my_platform_user/myapp@sha256:c4c2919c4c2919c4c2919f03db26",
            "pattern": "^[a-zA-Z_0-9]+[a-zA-Z_0-9]+((:|@sha256:)[a-zA-Z_0-9]+)?$",
            "description": "Image digest to uniquely identify this image.\n"
          },
          "tags": {
            "type": "array",
            "maxItems": 253,
            "minItems": 0,
            "description": "Tags referencing this image.",
            "items": {
              "type": "string",
              "maxLength": 8388608,
              "example": "v1",
              "pattern": "^[a-zA-Z_0-9]+$"
            }
          },
          "initrd": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if the image comes with an init ramdisk.\n"
          },
          "size_in_bytes": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 9223372036854775807,
            "example": 123456789,
            "description": "Total size of the image on disk in bytes including the initrd, if any.\n"
          },
          "args": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^([a-zA-Z0-9=_-]+ *)*$",
            "example": "-c /etc/myapp/myapp.conf",
            "description": "Default application arguments of the image.\nDismissed if the instance specifies application arguments.\n"
          },
          "kernel_args": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^([a-zA-Z0-9=_-]+ *)*$",
            "example": "console=ttyS0",
            "description": "Unikraft kernel arguments hardcoded into the image.\nPrepended to the kernel arguments set by Unikraft Cloud.\n"
          },
          "labels": {
            "type": "object",
            "maxProperties": 253,
            "example": {
              "mylabel": "myvalue"
            },
            "description": "Key value pairs of image labels (e.g., used as defaults for instance configuration).\n",
            "additionalProperties": {
              "maxProperties": 253,
              "type": "string",
              "maxLength": 8388608,
              "pattern": "^.+$"
            }
          }
        }
      },
      "instance": {
        "type": "object",
        "description": "An application instance.\n",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success",
            "description": "The status of the response.\n\nNote: Not when listing all existing instances.\n"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "format": "uuid",
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
            "description": "The UUID of the instance.\n"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "example": "young-monkey-uq6dxq0u",
            "description": "The name of the instance.\nThe instance will receive a DNS entry in your private network of the form `<name>.internal`.\n\nNote: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.\n"
          },
          "created_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-09-01T12:00:00Z",
            "description": "Date and time of creation in ISO8601.\n"
          },
          "state": {
            "type": "string",
            "enum": [
              "stopped",
              "starting",
              "running",
              "draining",
              "stopping",
              "standby"
            ],
            "example": "running",
            "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
          },
          "image": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^(?:(?=[^:\\/]{1,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$",
            "example": "user/app:latest",
            "description": "Digest of the image that the instance uses.\n\nNote: The image tag (e.g., `latest`) is translated by Unikraft Cloud to the image digest that was assigned the tag at the time of instance creation.\nThe image is pinned to this particular version.\n"
          },
          "memory_mb": {
            "type": "integer",
            "format": "int32",
            "minimum": 16,
            "maximum": 4096,
            "example": 512,
            "description": "Amount of memory assigned to the instance in megabytes.\n"
          },
          "args": {
            "type": "array",
            "maxItems": 253,
            "items": {
              "type": "string",
              "maxLength": 8388608,
              "pattern": "^.+$"
            },
            "example": [
              "--port",
              "8080"
            ],
            "description": "Application arguments.\n"
          },
          "env": {
            "type": "object",
            "properties": {
              "additionalProperties": {
                "maxProperties": 253,
                "type": "string",
                "maxLength": 8388608,
                "pattern": "^.+$"
              }
            },
            "example": {
              "port": "8080",
              "debug": "true"
            },
            "description": "Key/value pairs to be set as environment variables at boot time.\nValues must be strings.\n"
          },
          "start_count": {
            "type": "integer",
            "format": "int32",
            "example": 3,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Total number of times the instance has been started.\n"
          },
          "started_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-09-01T12:00:00Z",
            "description": "Date and time of last start in ISO8601.\n"
          },
          "stopped_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-09-01T12:00:00Z",
            "description": "If stopped, date and time of stop in ISO8601.\n"
          },
          "uptime_ms": {
            "type": "integer",
            "format": "int64",
            "example": 3600000,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total uptime in milliseconds.\n"
          },
          "rss_bytes": {
            "type": "integer",
            "format": "int64",
            "example": 5121024,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Resident set size (RSS) of the VMM in bytes (see [here](https://unikraft.cloud/docs/api/v1/instances/#metrics) for remarks on RSS).\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "cpu_time_ms": {
            "type": "integer",
            "format": "int64",
            "example": 3600000,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total consumed CPU time in milliseconds.\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "nconns": {
            "type": "integer",
            "format": "int32",
            "example": 42,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of currently established inbound connections (non-HTTP).\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "nreqs": {
            "type": "integer",
            "format": "int32",
            "example": 42,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of in-flight HTTP requests.\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "nqueued": {
            "type": "integer",
            "format": "int32",
            "example": 42,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of queued inbound connections and HTTP requests.\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "ntotal": {
            "type": "integer",
            "format": "int64",
            "example": 42,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total number of inbound connections and HTTP requests handled.\n\nNote: Only with `metrics=true` query parameter.\n"
          },
          "vmm_start_time_us": {
            "type": "integer",
            "format": "int32",
            "example": 3600000,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Time from start of instance to VMM process start in microseconds.\n\nNote: Only with Unikraft Cloud developer permissions.\n"
          },
          "vmm_load_time_us": {
            "type": "integer",
            "format": "int32",
            "example": 3600000,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Time from start of instance to finish loading of initrd and kernel into instance in microseconds.\n\nNote: Only with Unikraft Cloud developer permissions.\n"
          },
          "vmm_ready_time_us": {
            "type": "integer",
            "format": "int32",
            "example": 3600000,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Time from start of instance to entering instance execution in microseconds.\n\nNote: Only with Unikraft Cloud developer permissions.\n"
          },
          "boot_time_us": {
            "type": "integer",
            "format": "int32",
            "example": 3600000,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Time from start of instance to finish booting of Unikraft in microseconds.\n"
          },
          "net_time_us": {
            "type": "integer",
            "format": "int32",
            "example": 3600000,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Time from start of instance to first listen socket in microseconds.\n\nNote: Only with Unikraft Cloud developer permissions.\n"
          },
          "stop_reason": {
            "type": "integer",
            "format": "int32",
            "example": 15,
            "minimum": 0,
            "maximum": 255,
            "description": "Reason for ongoing or current stop (see [here](https://unikraft.cloud/docs/api/v1/instances/#stopreason)).\n"
          },
          "exit_code": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "minimum": 0,
            "maximum": 255,
            "description": "Exit code of the application.\n"
          },
          "stop_code": {
            "type": "integer",
            "format": "int32",
            "example": 33024,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Stop code of the kernel (see [here](https://unikraft.cloud/docs/api/v1/instances/#stopreason)).\n"
          },
          "restart_policy": {
            "type": "string",
            "default": "never",
            "example": "never",
            "enum": [
              "always",
              "on-failure",
              "never"
            ],
            "description": "When an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.\nAuto-restarts are performed according to the restart policy configured for a particular instance.\nThe policy can have the following values:\n\nPolicy       | Description\n-------------|------------\n`always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).\n`on-failure` | Only restart the instance if it crashes.\n`never`      | Never restart the instance (default).\n"
          },
          "restart": {
            "type": "object",
            "description": "Information about [auto-restarts](https://unikraft.cloud/docs/api/v1/instances/#restart).\n",
            "properties": {
              "attempt": {
                "type": "integer",
                "format": "int32",
                "description": "Number of restarts performed in the current restart sequence.\n",
                "example": 3,
                "minimum": 0,
                "maximum": 65535
              },
              "next_at": {
                "type": "string",
                "maxLength": 8388608,
                "format": "date-time",
                "description": "Date and time of next restart attempt in ISO8601.\n",
                "example": "2021-09-01T12:00:00Z"
              }
            }
          },
          "restart_count": {
            "type": "integer",
            "format": "int32",
            "example": 3,
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Total number of times the instance has been restarted by restart policy.\n"
          },
          "scale_to_zero": {
            "type": "object",
            "required": [
              "policy"
            ],
            "description": "With conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.\nPerforming a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.\nThis is not the case with Unikraft Cloud. Instances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.\n\nTo enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.\nUnikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.\nWhen there is new traffic coming in, it is automatically started again.\n\nIf you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful).\n",
            "properties": {
              "policy": {
                "type": "string",
                "example": "off",
                "enum": [
                  "on",
                  "off",
                  "idle"
                ],
                "description": "With the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.\n\nUnikraft Cloud currently supports the following scale-to-zero policies:\n\nPolicy | Description\n-------|------------\n`on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby\n`off`  | Scale-to-zero is not enabled. The instance keep on running until manually stopped\n`idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does not happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` handler as described [here](https://unikraft.cloud/docs/api/v1/services#handlers))\n"
              },
              "stateful": {
                "type": "boolean",
                "default": false,
                "example": false,
                "description": "Whether to use [stateful](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful) scale-to-zero.\n"
              },
              "cooldown_time_ms": {
                "type": "integer",
                "format": "int32",
                "default": 1000,
                "example": 1000,
                "minimum": 0,
                "maximum": 86400000,
                "description": "Cooldown time in milliseconds.\n"
              }
            }
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "maxLength": 36,
                "format": "uuid",
                "description": "The UUID of the snapshot.\n",
                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
              }
            }
          },
          "private_fqdn": {
            "type": "string",
            "maxLength": 8388608,
            "pattern": "^[a-zA-Z0-9.-]+.internal$",
            "example": "young-monkey.internal",
            "description": "Fully-qualified domain name under which the instance is accessible in the private network.\n"
          },
          "private_ip": {
            "type": "string",
            "maxLength": 15,
            "format": "ipv4",
            "example": "172.16.19.23",
            "description": "Private IPv4 of the instance for communication between instances of the same user.\nThis is equivalent to the IPv4 address of the first network interface.\n"
          },
          "service_group": {
            "type": "object",
            "description": "Description of the service that the instance is part of.\n\nNote: Only if attached to a service.\n",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 255,
                "format": "basename",
                "example": "my-service",
                "description": "The name of an existing service.\n\nNote: You need to specify either an existing [service](https://unikraft.cloud/docs/api/v1/services) via `uuid` or `name`, or provide a description of a new service.\nIf a description for a new service is provided, the service is created and the instance attached.\nThe service will receive an auto-generated name.\nSpecifying an empty `service_group` object creates a new service with no services published.\n"
              },
              "uuid": {
                "type": "string",
                "maxLength": 36,
                "format": "uuid",
                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                "description": "UUID of an existing service.\n"
              },
              "domains": {
                "type": "array",
                "maxItems": 253,
                "description": "Description of domains to associate with the service.\n\nDefault: auto-generated\nNote: If `name` is specified without also providing a domain, a domain is derived from `name` by appending an 8 characters long random alphanumeric suffix and the metro's domain name.\nFor example, setting the name to `my-project` without also providing a domain results in an auto-generated domain of `my-project-<random>.fra0.kraft.host`.\n",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "hostname",
                      "example": "my-instance",
                      "description": "Publicly accessible domain name.\n\nNote: The services published by the service will be accessible under the given domain names.\nIf `name` is a fully-qualified domain name, that is it ends with a dot (`.`), the domain name is taken as-is.\nOtherwise, the metro’s domain name is appended (e.g., `my-project` expands to `my-project.fra0.kraft.host`).\nIf the given domain name is already in use by the current or a different user the operation fails.\nIn addition, certain domain names cannot be used (e.g., `www.fra0.kraft.host`).\n"
                    },
                    "certificate": {
                      "type": "object",
                      "oneOf": [
                        {
                          "required": [
                            "uuid"
                          ]
                        },
                        {
                          "required": [
                            "name"
                          ]
                        }
                      ],
                      "description": "TLS certificate to use for the domain.\n\nNote: Only allowed for FQDNs, not for subdomains.\nSubdomains like `my-project` inherit the wildcard `*.<metro>.kraft.host` certificate.\nIf you specify an FQDN like `www.example.com`, Unikraft Cloud will automatically pick the certificate with the matching CN or trigger a certificate request (see [here](https://unikraft.cloud/docs/api/v1/certificates)).\n",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "format": "uuid",
                          "description": "UUID of the certificate",
                          "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "format": "basename",
                          "description": "Name of the certificate",
                          "example": "my-certificate"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "volumes": {
            "type": "array",
            "maxItems": 253,
            "description": "Description of [volumes](https://unikraft.cloud/docs/api/v1/volumes).\n",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "uuid",
                    "at"
                  ]
                },
                {
                  "required": [
                    "name",
                    "at"
                  ]
                }
              ],
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                  "description": "UUID of an existing volume.\nMust be in `available` [state](https://unikraft.cloud/docs/api/v1/volumes#states).\n"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "basename",
                  "example": "my-volume",
                  "description": "The name of the volume to attach.\n\nNote: You need to specify either `uuid`, `name`, or `size_mb`.\nSpecifying `size_mb` will create a new [volume](https://unikraft.cloud/docs/api/v1/volumes) and attach it to the instance.\nThe volume will receive an auto-generated name.\n"
                },
                "at": {
                  "type": "string",
                  "maxLength": 8388608,
                  "pattern": "^(/[ a-zA-Z0-9._-]*)*$",
                  "example": "/home/user",
                  "description": "Path of the mountpoint.\nMust be empty.\nAutomatically created if it does not exist.\n"
                },
                "readonly": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "Whether the volume should be mounted read-only.\n"
                }
              }
            }
          },
          "network_interfaces": {
            "type": "array",
            "maxItems": 253,
            "description": "List of network interfaces attached to the instance.\n",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                  "description": "The UUID of the network interface.\n"
                },
                "private_ip": {
                  "type": "string",
                  "maxLength": 15,
                  "format": "ipv4",
                  "example": "172.16.19.23",
                  "description": "Private IPv4 of network interface.\n"
                },
                "mac": {
                  "type": "string",
                  "maxLength": 17,
                  "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                  "example": "00:00:5e:00:53:01",
                  "description": "MAC address of the network interface.\n"
                },
                "rx_bytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 123456,
                  "minimum": 0,
                  "maximum": 9223372036854775807,
                  "description": "Amount of bytes received from interface.\n\nNote: Only with `metrics=true` query parameter.\n"
                },
                "rx_packets": {
                  "type": "integer",
                  "format": "int64",
                  "example": 123456,
                  "minimum": 0,
                  "maximum": 9223372036854775807,
                  "description": "Count of packets received from interface.\n\nNote: Only with `metrics=true` query parameter.\n"
                },
                "tx_bytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 123456,
                  "minimum": 0,
                  "maximum": 9223372036854775807,
                  "description": "Amount of bytes transmitted over interface.\n\nNote: Only with `metrics=true` query parameter.\n"
                },
                "tx_packets": {
                  "type": "integer",
                  "format": "int64",
                  "example": 123456,
                  "minimum": 0,
                  "maximum": 9223372036854775807,
                  "description": "Count of packets transmitted over interface.\n\nNote: Only with `metrics=true` query parameter.\n"
                }
              }
            }
          }
        }
      },
      "instance_metrics": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success",
            "description": "The status of the response.\n"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "format": "uuid",
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
            "description": "The UUID of the instance.\n"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "example": "young-monkey-uq6dxq0u",
            "description": "The name of the instance.\n"
          },
          "rss_bytes": {
            "type": "integer",
            "format": "int64",
            "example": 123456789,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Resident set size of the VMM in bytes.\n\nNote: The resident set size (RSS) specifies the amount of physical memory that has been touched by the instance and is currently reserved for the instance on the Unikraft Cloud server.\nThe RSS grows until the instance has touched all memory assigned to it via the `memory_mb` setting and may also exceed this value as supporting services running outside the instance acquire memory.\nThe RSS is different from the current amount of memory allocated by the application, which is likely to fluctuate over the lifetime of the application.\nThe RSS is not a cumulative metric.\nWhen the instance is stopped `rss` goes down to 0.\n"
          },
          "cpu_time_ms": {
            "type": "integer",
            "format": "int64",
            "example": 230,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Consumed CPU time in milliseconds.\n"
          },
          "rx_bytes": {
            "type": "integer",
            "format": "int64",
            "example": 431412,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total amount of bytes received from network.\n"
          },
          "rx_packets": {
            "type": "integer",
            "format": "int64",
            "example": 1233,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total count of packets received from network.\n"
          },
          "tx_bytes": {
            "type": "integer",
            "format": "int64",
            "example": 432432,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total amount of bytes transmitted over network.\n"
          },
          "tx_packets": {
            "type": "integer",
            "format": "int64",
            "example": 431412,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total count of packets transmitted over network.\n"
          },
          "nconns": {
            "type": "integer",
            "format": "int32",
            "example": 2424,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of currently established inbound connections (non-HTTP).\n"
          },
          "nreqs": {
            "type": "integer",
            "format": "int32",
            "example": 1235,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of in-flight HTTP requests.\n"
          },
          "nqueued": {
            "type": "integer",
            "format": "int32",
            "example": 12353,
            "minimum": 0,
            "maximum": 65535,
            "description": "Number of queued inbound connections and HTTP requests.\n"
          },
          "ntotal": {
            "type": "integer",
            "format": "int64",
            "example": 43431,
            "minimum": 0,
            "maximum": 9223372036854775807,
            "description": "Total number of inbound connections and HTTP requests handled.\n"
          }
        }
      },
      "service": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "description": "The status of the response.\n"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "format": "uuid",
            "description": "The UUID of the service.\n",
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "description": "The name of the service.\n",
            "example": "my-service"
          },
          "created_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "description": "Date and time of creation in ISO8601.\n",
            "example": "2021-01-01T00:00:00Z"
          },
          "persistent": {
            "type": "boolean",
            "description": "Indicates if the service will stay alive even after the last instance detached.\n",
            "example": true
          },
          "autoscale": {
            "type": "boolean",
            "description": "Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.\n",
            "example": true
          },
          "soft_limit": {
            "type": "integer",
            "format": "int32",
            "description": "Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
            "example": 1,
            "minimum": 1,
            "maximum": 65535
          },
          "hard_limit": {
            "type": "integer",
            "format": "int32",
            "description": "Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
            "example": 65535,
            "minimum": 1,
            "maximum": 65535
          },
          "services": {
            "type": "array",
            "maxItems": 253,
            "description": "Description of published network services.\n",
            "items": {
              "$ref": "#/components/schemas/service_mapping"
            }
          },
          "domains": {
            "type": "array",
            "maxItems": 253,
            "items": {
              "type": "object",
              "properties": {
                "fqdn": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "hostname",
                  "description": "Public fully-qualified domain name under which the service is accessible from the Internet.\n",
                  "example": "my-project.fra0.unikraft.app"
                },
                "certificate": {
                  "$ref": "#/components/schemas/certificate"
                }
              }
            }
          },
          "instances": {
            "type": "array",
            "maxItems": 253,
            "description": "Instances attached to this service",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "description": "The UUID of the instance.\n",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "basename",
                  "description": "The name of the instance.\n",
                  "example": "my-instance"
                }
              }
            }
          }
        }
      },
      "service_mapping": {
        "type": "object",
        "required": [
          "port"
        ],
        "properties": {
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "Public-facing port.\n",
            "example": 8080,
            "minimum": 1,
            "maximum": 65535
          },
          "destination_port": {
            "type": "integer",
            "format": "int32",
            "description": "Application port to which inbound traffic is redirected.\n",
            "example": 8080,
            "minimum": 1,
            "maximum": 65535
          },
          "handlers": {
            "type": "array",
            "maxItems": 253,
            "description": "See [Connection Handlers](https://unikraft.cloud/docs/api/v1/services/#handlers).\n",
            "items": {
              "type": "string",
              "enum": [
                "tls",
                "http",
                "redirect"
              ],
              "example": "tls",
              "description": "Unikraft Cloud uses connection handlers to decide how to forward connections from the Internet to your application.\nYou configure the handlers for every published service port individually.\nThe following handlers are available:\n\nHandler   | Description\n----------|------------\n`tls`     | Terminate the TLS connection at the Unikraft Cloud gateway using our wildcard certificate issued for the `kraft.cloud` domain. The gateway forwards the unencrypted traffic to your application\n`http`    | Enable HTTP mode on the load balancer to load balance on the level of individual HTTP requests. In this mode, only HTTP connections are accepted. If this option is not set the load balancer works in TCP mode and balances TCP connections\n`redirect`| Redirect traffic from the source port to the destination port\n\nCurrently, there is a set of constraints when publishing ports:\n* Port 80: Must have `http` and must not have `tls` set\n* Port 443: Must have `http` and `tls` set\n* The `redirect` handler can only be set on port 80 (HTTP) to redirect to port 443 (HTTPS)\n* All other ports must have `tls` and must not have `http` set\n"
            }
          }
        }
      },
      "autoscale_config": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "maxLength": 12,
            "description": "`success` on success, `unconfigured` if autoscale is not configured, or `error` if the request failed.\n",
            "enum": [
              "success",
              "unconfigured",
              "failure"
            ],
            "example": "success"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "format": "uuid",
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
            "description": "The UUID of the service.\n"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "example": "my-service",
            "description": "The name of the service.\n"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Whether autoscale is enabled.\n"
          },
          "min_size": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "maximum": 1,
            "description": "Minimum number of instances.\n"
          },
          "max_size": {
            "type": "integer",
            "format": "int32",
            "example": 4,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Maximum number of instances.\nMaximum number is determined by the quota.\n"
          },
          "warmup_time_ms": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Length of [warmup phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.\n"
          },
          "cooldown_time_ms": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Length of [cooldown phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.\n"
          },
          "master": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "maxLength": 36,
                "format": "uuid",
                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                "description": "The UUID of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).\n"
              },
              "name": {
                "type": "string",
                "maxLength": 255,
                "format": "basename",
                "example": "my-instance",
                "description": "The name of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).\n"
              }
            }
          },
          "policies": {
            "type": "array",
            "maxItems": 253,
            "items": {
              "$ref": "#/components/schemas/autoscale_policy"
            }
          }
        }
      },
      "autoscale_policy": {
        "type": "object",
        "description": "Description of [autoscale policies](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-policies).\nSee [policy creation endpoint](https://unikraft.cloud/docs/api/v1/autoscale/#policy_create).\n",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "example": "my-policy",
            "description": "The name of the policy.\n"
          },
          "metric": {
            "type": "string",
            "default": "cpu",
            "enum": [
              "cpu"
            ],
            "example": "cpu",
            "description": "Metric to monitor.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "step"
            ],
            "example": "step",
            "description": "Type of autoscale policy.\n"
          },
          "adjustment_type": {
            "type": "string",
            "default": "change",
            "enum": [
              "change",
              "exact",
              "percent"
            ],
            "example": "change",
            "description": "Type of adjustment.\n"
          },
          "steps": {
            "type": "array",
            "maxItems": 253,
            "items": {
              "$ref": "#/components/schemas/autoscale_policy_step"
            }
          }
        }
      },
      "autoscale_policy_step": {
        "type": "object",
        "description": "Step policy.\n\nNote: Only one of `lower_bound` and `upper_bound` can be `null` or not specified.\nSee the description of the step policy for more information on defining steps.\n",
        "properties": {
          "lower_bound": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "minimum": -2147483647,
            "maximum": 2147483647,
            "description": "Lower bound of the step range.\nIn dimension of selected metric.\n"
          },
          "upper_bound": {
            "type": "integer",
            "format": "int32",
            "example": 100,
            "minimum": -2147483647,
            "maximum": 2147483647,
            "description": "Upper bound of the step range.\nIn dimension of selected metric.\n"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": -2147483647,
            "maximum": 2147483647,
            "description": "Adjustment to take if metric is in range.\n"
          }
        }
      },
      "user_quota": {
        "type": "object",
        "properties": {
          "used": {
            "$ref": "#/components/schemas/user_quota_used"
          },
          "hard": {
            "$ref": "#/components/schemas/user_quota_hard"
          },
          "limits": {
            "$ref": "#/components/schemas/user_quota_limits"
          }
        }
      },
      "user_quota_used": {
        "type": "object",
        "description": "Used quota.\n",
        "properties": {
          "instances": {
            "type": "integer",
            "format": "int32",
            "example": 2,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of created instances.\n"
          },
          "live_instances": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of instances that are not in the `stopped` state.\n"
          },
          "live_memory_mb": {
            "type": "integer",
            "format": "int32",
            "example": 1024,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Amount of memory assigned to instances that are not in the `stopped` state in megabytes.\n"
          },
          "service_groups": {
            "type": "integer",
            "format": "int32",
            "example": 253,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of services.\n"
          },
          "services": {
            "type": "integer",
            "format": "int32",
            "example": 253,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of published network ports over all existing services.\n"
          },
          "volumes": {
            "type": "integer",
            "format": "int32",
            "example": 16,
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of volumes.\n"
          },
          "total_volume_mb": {
            "type": "integer",
            "format": "int32",
            "example": 16384,
            "minimum": 0,
            "maximum": 1048576,
            "description": "Total size of all volumes in megabytes.\n"
          }
        }
      },
      "user_quota_hard": {
        "type": "object",
        "description": "Hard quota limits.\n",
        "instances": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Number of created instances.\n"
        },
        "live_instances": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Number of instances that are not in the `stopped` state.\n"
        },
        "live_memory_mb": {
          "type": "integer",
          "format": "int32",
          "example": 1024,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Amount of memory assigned to instances that are not in the `stopped` state in megabytes.\n"
        },
        "service_groups": {
          "type": "integer",
          "format": "int32",
          "example": 253,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Number of services.\n"
        },
        "services": {
          "type": "integer",
          "format": "int32",
          "example": 253,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Number of published network ports over all existing services.\n"
        },
        "volumes": {
          "type": "integer",
          "format": "int32",
          "example": 16,
          "minimum": 0,
          "maximum": 2147483647,
          "description": "Number of volumes.\n"
        },
        "total_volume_mb": {
          "type": "integer",
          "format": "int32",
          "example": 16384,
          "minimum": 0,
          "maximum": 1048576,
          "description": "Total size of all volumes in megabytes.\n"
        }
      },
      "user_quota_limits": {
        "type": "object",
        "description": "Additional limits.\n",
        "properties": {
          "min_memory_mb": {
            "type": "integer",
            "format": "int32",
            "example": 128,
            "minimum": 16,
            "maximum": 2147483647,
            "description": "Minimum amount of memory assigned to live instances in megabytes.\n"
          },
          "max_memory_mb": {
            "type": "integer",
            "format": "int32",
            "example": 4096,
            "minimum": 4096,
            "maximum": 2147483647,
            "description": "Maximum amount of memory assigned to live instances in megabytes.\n"
          },
          "min_volume_mb": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Minimum size of a volume in megabytes.\n"
          },
          "max_volume_mb": {
            "type": "integer",
            "format": "int32",
            "example": 1024,
            "minimum": 1024,
            "maximum": 2147483647,
            "description": "Maximum size of a volume in megabytes.\n"
          },
          "min_autoscale_size": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Minimum size of an autoscale group\n\nNote: These restrict the `min_size` and `max_size` fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics).\nIf both values are `1` autoscale is not enabled for your account.\nIf you want to explore autoscale for your services, please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).\n"
          },
          "max_autoscale_size": {
            "type": "integer",
            "format": "int32",
            "example": 16,
            "minimum": 1,
            "maximum": 2147483647,
            "description": "Maximum size of an autoscale group.\n\nNote: These restrict the `min_size` and `max_size` fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics).\n"
          }
        }
      },
      "volume": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success",
            "description": "The status of the response.\n\nNote: Not when listing all existing volumes.\n"
          },
          "state": {
            "type": "string",
            "enum": [
              "uninitialized",
              "initialized",
              "available",
              "idle",
              "mounted",
              "busy",
              "error"
            ],
            "example": "available",
            "description": "A volume can be in one of the following states:\n\nState           | Description\n----------------|---\n`uninitialized` | The volume is scheduled to be created.\n`initialized`   | The volume is currently created and formatted.\n`available`     | The volume is healthy and available to be attached to an instance.\n`idle`          | The volume is healthy and attached to an instance. It is possible to [detach](https://unikraft.cloud/docs/api/v1/volumes/#detach) it in this state.\n`mounted`       | The volume is currently mounted in an instance.\n`busy`          | There are maintenance tasks running on the volume.\n`error`         | The volume is in an error state that needs inspection by a Unikraft Cloud engineer.\n"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "format": "uuid",
            "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
            "description": "The UUID of the volume.\n"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "format": "basename",
            "example": "my-volume",
            "description": "The name of the volume.\n"
          },
          "size_mb": {
            "type": "integer",
            "format": "int32",
            "example": 1024,
            "minimum": 1,
            "maximum": 1048576,
            "description": "Size of the volume in megabytes.\n"
          },
          "attached_to": {
            "type": "array",
            "maxItems": 253,
            "description": "List of instances that this volume is attached to.\n",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                  "description": "The UUID of the instance the volume is attached to.\n"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "basename",
                  "example": "my-instance",
                  "description": "The name of the instance the volume is attached to.\n"
                }
              }
            }
          },
          "mounted_by": {
            "type": "array",
            "maxItems": 253,
            "description": "List of instances that have this volume mounted.\n",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                  "description": "The UUID of the instance.\n"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "format": "basename",
                  "example": "my-instance",
                  "description": "The name of the instance.\n"
                },
                "readonly": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether the volume is mounted read-only or read-write.\n"
                }
              }
            }
          },
          "persistent": {
            "type": "boolean",
            "description": "Indicates if the volume will stay alive when the last instance is deleted that this volume is attached to.\n"
          },
          "created_at": {
            "type": "string",
            "maxLength": 8388608,
            "format": "date-time",
            "example": "2021-01-01T00:00:00Z",
            "description": "Date and time of creation in ISO8601.\n"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "description": "Unikraft Cloud personal access token.\n",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "base64"
      }
    },
    "parameters": {
      "uuid": {
        "name": "uuid",
        "in": "path",
        "required": true,
        "description": "The UUID of the resource.\nThe UUID is a 36-character string that uniquely identifies the resource.\nThe UUID is returned by the API after creating a resource.\n",
        "schema": {
          "type": "string",
          "maxLength": 36,
          "format": "uuid",
          "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
        }
      },
      "name": {
        "name": "name",
        "in": "path",
        "required": true,
        "description": "The name of the resource.\nThe name is a string that identifies the resource.\nThe name is sometimes returned by the API after creating a resource.\n",
        "schema": {
          "type": "string",
          "maxLength": 255,
          "format": "basename"
        }
      }
    }
  },
  "paths": {
    "/certificates": {
      "post": {
        "operationId": "create-certificate",
        "summary": "Upload a certificate",
        "description": "Create a new certificate object and upload an existing certificate chain and private key.\n",
        "tags": [
          "certificates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "format": "basename",
                    "maxLength": 255,
                    "description": "The name of the certificate to upload.\n\nNote: If no name is specified a random name of the form `<cn>-X` is auto-generated, where `<cn>` is the common name and `X` is a 5 character long random alphanumeric suffix.\nFor wildcard domains the wildcard part is cut off.\n",
                    "example": "my-certificate"
                  },
                  "cn": {
                    "type": "string",
                    "format": "basename",
                    "maxLength": 255,
                    "description": "The common name of the certificate.\n",
                    "example": "example.com"
                  },
                  "chain": {
                    "type": "string",
                    "pattern": "^-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----",
                    "maxLength": 8388608,
                    "description": "The chain of the certificate in PEM format.\n",
                    "example": "-----BEGIN CERTIFICATE-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDQ...-----END CERTIFICATE-----"
                  },
                  "pkey": {
                    "type": "string",
                    "pattern": "^-----BEGIN PRIVATE KEY-----.+-----END PRIVATE KEY-----",
                    "maxLength": 8388608,
                    "description": "The private key of the certificate in PEM format.\n",
                    "example": "-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDQ...-----END PRIVATE KEY-----"
                  }
                },
                "required": [
                  "cn",
                  "chain",
                  "pkey"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "format": "uuid",
                                "maxLength": 36,
                                "description": "UUID of the certificate",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "format": "basename",
                                "maxLength": 255,
                                "description": "Name of the certificate",
                                "example": "my-certificate"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-certificates",
        "summary": "Delete one or more certificates",
        "description": "Deletes the specified certificate(s).\nFails if the certificate is still attached to a service.\nAfter this call the IDs associated with the certificate are no longer valid.\n",
        "tags": [
          "certificates"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the certificate to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "example.com-4i1j7",
                      "description": "The name of the certificate to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the certificate.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "my-certificate",
                                "description": "The name of the certificate.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-certificates",
        "summary": "Get the status of one or more certificates",
        "description": "Returns the current status and the properties of specified certificate(s).\n",
        "tags": [
          "certificates"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            },
            "description": "Whether to provide detailed status and configuration information.\n",
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the certificate to retrieve.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "example.com-4i1j7",
                      "description": "The name of the certificate to retrieve.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/certificate"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certificates/{uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-certificate-by-uuid",
        "summary": "Get the status of a certificate given its UUID",
        "description": "Returns the current status and the properties of a certificate.\n",
        "tags": [
          "certificates"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true,
            "description": "Whether to provide detailed status and configuration information.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "$ref": "#/components/schemas/certificate"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-certificate-by-uuid",
        "summary": "Delete a single certificate given its UUID",
        "description": "Deletes the specified certificate.\nFails if the certificate is still attached to a service.\nAfter this call the IDs associated with the certificate are no longer valid.\n",
        "tags": [
          "certificates"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the certificate.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "my-certificate",
                                "description": "The name of the certificate.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/images/list": {
      "get": {
        "operationId": "get-images",
        "summary": "Get list of available images",
        "description": "Retrieves all images visible to an account in OCI format.\n",
        "tags": [
          "images"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 2048,
              "pattern": "^[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?$"
            },
            "example": "my_platform_user/myapp",
            "description": "Filter images by namespace.\n\nNote: Set the namespace to your Unikraft Cloud account name to list only your personal images.\nIt can be `official` for listing only the official ones.\nIn addition, the namespace can include the app name.\nFor example, `${UKC_USER}/myapp` to list all your `myapp` images.\n"
          },
          {
            "name": "tagged",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": false,
            "description": "Whether to include only tagged images.\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "digest"
                      ]
                    },
                    {
                      "required": [
                        "tagged"
                      ]
                    }
                  ],
                  "properties": {
                    "digest": {
                      "type": "string",
                      "maxLength": 255,
                      "example": "user/app@sha256:caf83482bb0a5b091b8648116a2723118c55efb2835e865d857286d7df9f2999",
                      "pattern": "^[a-zA-Z_0-9]+[a-zA-Z_0-9]+((:|@sha256:)[a-zA-Z_0-9]+)?$",
                      "description": "Image digest to lookup.\n"
                    },
                    "tagged": {
                      "type": "string",
                      "maxLength": 8388608,
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "example": "user/app:latest",
                      "description": "Image tag to lookup.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "images": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/image"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances": {
      "post": {
        "operationId": "create-instance",
        "summary": "Create an instance",
        "description": "Creates a new instance of the specified Unikraft Cloud image.\nYou can describe the properties of the new instance such as its startup arguments and amount of memory.\nNote that the instance properties can only be defined during creation.\nThey cannot be changed later.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "basename",
                    "example": "young-monkey-uq6dxq0u",
                    "description": "The name of the instance.\nThe instance will receive a DNS entry in your private network of the form `<name>.internal`.\n\nNote: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.\n"
                  },
                  "image": {
                    "type": "string",
                    "maxLength": 8388608,
                    "pattern": "^(?:(?=[^:\\/]{1,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$",
                    "example": "user/app:latest",
                    "description": "Digest of the image that the instance uses.\n\nNote: The image tag (e.g., `latest`) is translated by Unikraft Cloud to the image digest that was assigned the tag at the time of instance creation.\nThe image is pinned to this particular version.\n"
                  },
                  "args": {
                    "type": "array",
                    "maxItems": 253,
                    "items": {
                      "type": "string",
                      "maxLength": 8388608,
                      "pattern": "^.+$"
                    },
                    "example": [
                      "--port",
                      "8080"
                    ],
                    "description": "Application arguments.\n"
                  },
                  "env": {
                    "type": "object",
                    "properties": {
                      "additionalProperties": {
                        "maxProperties": 253,
                        "type": "string",
                        "maxLength": 8388608,
                        "pattern": "^.+$"
                      }
                    },
                    "example": {
                      "port": "8080",
                      "debug": "true"
                    },
                    "description": "Key/value pairs to be set as environment variables at boot time.\nValues must be strings.\n"
                  },
                  "memory_mb": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 16,
                    "maximum": 4096,
                    "example": 512,
                    "description": "Amount of memory assigned to the instance in megabytes.\n"
                  },
                  "restart_policy": {
                    "type": "string",
                    "default": "never",
                    "example": "never",
                    "enum": [
                      "always",
                      "on-failure",
                      "never"
                    ],
                    "description": "When an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.\nAuto-restarts are performed according to the restart policy configured for a particular instance.\nThe policy can have the following values:\n\nPolicy       | Description\n-------------|------------\n`always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).\n`on-failure` | Only restart the instance if it crashes.\n`never`      | Never restart the instance (default).\n"
                  },
                  "scale_to_zero": {
                    "type": "object",
                    "required": [
                      "policy"
                    ],
                    "description": "With conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.\nPerforming a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.\nThis is not the case with Unikraft Cloud. Instances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.\n\nTo enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.\nUnikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.\nWhen there is new traffic coming in, it is automatically started again.\n\nIf you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful).\n",
                    "properties": {
                      "policy": {
                        "type": "string",
                        "example": "off",
                        "enum": [
                          "on",
                          "off",
                          "idle"
                        ],
                        "description": "With the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.\n\nUnikraft Cloud currently supports the following scale-to-zero policies:\n\nPolicy | Description\n-------|------------\n`on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby\n`off`  | Scale-to-zero is not enabled. The instance keep on running until manually stopped\n`idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does not happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` handler as described [here](https://unikraft.cloud/docs/api/v1/services#handlers))\n"
                      },
                      "stateful": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Whether to use [stateful](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful) scale-to-zero.\n"
                      },
                      "cooldown_time_ms": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1000,
                        "example": 1000,
                        "minimum": 0,
                        "maximum": 86400000,
                        "description": "Cooldown time in milliseconds.\n"
                      }
                    }
                  },
                  "volumes": {
                    "type": "array",
                    "maxItems": 253,
                    "description": "Description of [volumes](https://unikraft.cloud/docs/api/v1/volumes).\n",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "required": [
                            "uuid",
                            "at"
                          ]
                        },
                        {
                          "required": [
                            "name",
                            "at"
                          ]
                        }
                      ],
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "format": "uuid",
                          "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                          "description": "UUID of an existing volume.\nMust be in `available` [state](https://unikraft.cloud/docs/api/v1/volumes#states).\n"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "format": "basename",
                          "example": "my-volume",
                          "description": "The name of the volume to attach.\n\nNote: You need to specify either `uuid`, `name`, or `size_mb`.\nSpecifying `size_mb` will create a new [volume](https://unikraft.cloud/docs/api/v1/volumes) and attach it to the instance.\nThe volume will receive an auto-generated name.\n"
                        },
                        "at": {
                          "type": "string",
                          "maxLength": 8388608,
                          "pattern": "^(/[ a-zA-Z0-9._-]*)*$",
                          "example": "/home/user",
                          "description": "Path of the mountpoint.\nMust be empty.\nAutomatically created if it does not exist.\n"
                        },
                        "readonly": {
                          "type": "boolean",
                          "default": false,
                          "example": false,
                          "description": "Whether the volume should be mounted read-only.\n"
                        }
                      }
                    }
                  },
                  "service_group": {
                    "type": "object",
                    "description": "Description of published [services](https://unikraft.cloud/docs/api/v1/services).\n",
                    "oneOf": [
                      {
                        "required": [
                          "uuid"
                        ]
                      },
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "services"
                        ]
                      }
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "basename",
                        "description": "The name of the service.\n",
                        "example": "my-service"
                      },
                      "uuid": {
                        "type": "string",
                        "maxLength": 36,
                        "format": "uuid",
                        "description": "The UUID of the service.\n",
                        "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                      },
                      "domains": {
                        "type": "array",
                        "maxItems": 253,
                        "items": {
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "type": "string",
                              "maxLength": 255,
                              "format": "hostname",
                              "description": "Public fully-qualified domain name under which the service is accessible from the Internet.\n",
                              "example": "my-project.fra0.unikraft.app"
                            },
                            "certificate": {
                              "$ref": "#/components/schemas/certificate"
                            }
                          }
                        }
                      },
                      "services": {
                        "$ref": "#/components/schemas/service_mapping"
                      }
                    }
                  },
                  "autostart": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "Autostart behavior.\nIf `true` the instance will start immediately after creation.\n"
                  },
                  "replicas": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "example": 0,
                    "minimum": 0,
                    "maximum": 253,
                    "description": "Number of instance replicas to create with these properties.\n"
                  },
                  "wait_timeout_ms": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "example": 1000,
                    "minimum": 0,
                    "maximum": 2147483647,
                    "description": "Timeout to wait for all new instances to reach running state in milliseconds.\nNo wait performed for `0`\n\nNote: Only valid if `autostart` is `true`.\nThe maximum timeout may vary. Use `-1` for the largest possible value.\n"
                  },
                  "features": {
                    "type": "array",
                    "maxItems": 253,
                    "description": "Set of features to enable for the instance (see [below](https://unikraft.cloud/docs/api/v1/instances/#features)).\n",
                    "items": {
                      "type": "string",
                      "example": "scale-to-zero",
                      "enum": [
                        "scale-to-zero",
                        "delete-on-stop"
                      ],
                      "description": "The features field accepts the following values:\n\nFeature          | Description\n-----------------|------------\n`scale-to-zero`  | Enables [scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero) using the default configuration with `policy=on`. This feature string is deprecated and will be removed in future versions. Use the scale_to_zero configuration object instead.\n`delete-on-stop` | Makes the instance ephemeral so that it is automatically deleted when it stops.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/instance"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-instances",
        "summary": "Get the status of one or more instances",
        "description": "Returns the current status and the configuration of a particular instance(s) if a UUID or name is specified.\nOtherwise, returns the current status and configuration of all instances.\n",
        "tags": [
          "instances"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": false,
            "description": "Whether to provide detailed status and configuration information.\n"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": false,
            "description": "Whether to include metrics in the detailed status.\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to get the status for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to get the status for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "$ref": "#/components/schemas/instance"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-instances",
        "summary": "Delete one or more instances",
        "description": "Deletes the specified instance(s).\nAfter this call the IDs associated with the instance are no longer valid.\nA running instance is force stopped.\nIf the instance is an [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale#basics), deleting the instance resets autoscale for the service and deletes all instances created by autoscale.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n\nNote: Not when listing all existing instances.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\nThe instance will receive a DNS entry in your private network of the form `<name>.internal`.\n\nNote: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-instance-by-uuid",
        "summary": "Get the status of a single instance",
        "description": "Returns the current status and the configuration of a particular instance if a UUID or name is specified.\nOtherwise, returns the current status and configuration of all instances.\n",
        "tags": [
          "instances"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": false,
            "description": "Whether to provide detailed status and configuration information.\n"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": false,
            "description": "Whether to include metrics in the detailed status.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/instance"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-instance-by-uuid",
        "summary": "Delete a single instance given its UUID",
        "description": "Deletes the specified instance.\nAfter this call the IDs associated with the instance are no longer valid.\nA running instance is force stopped.\nIf the instance is an [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale#basics), deleting the instance resets autoscale for the service and deletes all instances created by autoscale.\n",
        "tags": [
          "instances"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n\nNote: Not when listing all existing instances.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\nThe instance will receive a DNS entry in your private network of the form `<name>.internal`.\n\nNote: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/log": {
      "get": {
        "operationId": "get-instance-logs",
        "summary": "Retrieve logs for one or more instances",
        "description": "Returns the log output of the specified instance(s) in base64 encoding.\nNote that the maximum response size is capped.\nThe log output might thus be cut off and require multiple requests to fetch further output.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to retrieve logs for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to retrieve logs for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int32",
                      "default": -4096,
                      "example": -4096,
                      "minimum": -2147483647,
                      "maximum": 2147483647,
                      "description": "The byte offset of the log output to receive.\nA negative sign makes the offset relative to the end of the log.\n"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "default": 4096,
                      "example": 4096,
                      "minimum": 0,
                      "maximum": 16383,
                      "description": "The amount of bytes to return at most.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "description": "The status of the response.\n",
                                "example": "success"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the instance.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the instance.\n",
                                "example": "young-monkey-uq6dxq0u"
                              },
                              "output": {
                                "type": "string",
                                "maxLength": 8388608,
                                "format": "byte",
                                "description": "BASE64 encoded log output.\n",
                                "example": "SGVsbG8gV29ybGQhCg=="
                              },
                              "available": {
                                "type": "object",
                                "description": "Description of the log availability.\n",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The first byte offset that can be retrieved.\n",
                                    "example": 0,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  },
                                  "end": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The last byte offset that can be retrieved.\n",
                                    "example": 42,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "description": "Description of the range that was returned. Useful for requests with offset relative to end.\n",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The first retrieved byte.\n",
                                    "example": 0,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  },
                                  "end": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The last retrieved byte.\n",
                                    "example": 42,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{uuid}/log": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-instance-logs-by-uuid",
        "summary": "Retrieve logs for an instance given its UUID",
        "description": "Returns the log output of the specified instance in base64 encoding.\nNote that the maximum response size is capped.\nThe log output might thus be cut off and require multiple requests to fetch further output.\n",
        "tags": [
          "instances"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "description": "The status of the response.\n",
                                "example": "success"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the instance.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the instance.\n",
                                "example": "young-monkey-uq6dxq0u"
                              },
                              "output": {
                                "type": "string",
                                "maxLength": 8388608,
                                "format": "byte",
                                "description": "BASE64 encoded log output.\n",
                                "example": "SGVsbG8gV29ybGQhCg=="
                              },
                              "available": {
                                "type": "object",
                                "description": "Description of the log availability.\n",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The first byte offset that can be retrieved.\n",
                                    "example": 0,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  },
                                  "end": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The last byte offset that can be retrieved.\n",
                                    "example": 42,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "description": "Description of the range that was returned. Useful for requests with offset relative to end.\n",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The first retrieved byte.\n",
                                    "example": 0,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  },
                                  "end": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The last retrieved byte.\n",
                                    "example": 42,
                                    "minimum": 0,
                                    "maximum": 9223372036854775807
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/metrics": {
      "get": {
        "operationId": "get-instance-metrics",
        "summary": "Get metrics for one or more instances",
        "description": "Returns the various instance(s) metrics like CPU time and network traffic statistics.\nCumulative metrics (e.g., used CPU time) are accumulated over instance starts.\nThis endpoint can return either a JSON-encoded response or a response in the Prometheus format.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "uuid"
                  ],
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to get the metrics for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to get the metrics for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/instance_metrics"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{uuid}/metrics": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-instance-metrics-by-uuid",
        "summary": "Get metrics for an instance given its UUID",
        "description": "Returns the various instances metrics like CPU time and network traffic statistics.\nCumulative metrics (e.g., used CPU time) are accumulated over instance starts.\nThis endpoint can return either a JSON-encoded response or a response in the Prometheus format.\n",
        "tags": [
          "instances"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/instance_metrics"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/start": {
      "put": {
        "operationId": "start-instances",
        "summary": "Start one or more instances",
        "description": "Starts one or more stopped instance(s).\nDoes nothing for an instance which is already running.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to start.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to start.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\n"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{uuid}/start": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "put": {
        "operationId": "start-instance-by-uuid",
        "summary": "Start an instance given its UUID",
        "description": "Starts a stopped instance.\nDoes nothing for an instance that is already running.\n",
        "tags": [
          "instances"
        ],
        "parameters": [
          {
            "name": "wait_timeout_ms",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Timeout to wait for all specified instances to reach running state in milliseconds.\nNo wait performed for `0`.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\n"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/stop": {
      "put": {
        "operationId": "stop-instances",
        "summary": "Stop one or more instances",
        "description": "Stops the specified instance(s), but does not destroy it.\nAll volatile state (e.g., RAM contents) is lost.\nDoes nothing for an instance that is already stopped.\nThe instance can be started again with the [`start`](https://unikraft.cloud/docs/api/v1/instances/#start) endpoint.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to get the status for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to get the status for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    },
                    "force": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "Forces immediate shutdown.\n"
                    },
                    "drain_timeout_ms": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "example": 0,
                      "minimum": 0,
                      "maximum": 3600000,
                      "description": "Timeout for draining connections in milliseconds.\nThe instance does not receive new connections in the draining phase.\nThe instance is stopped when the last connection has been closed or the timeout expired.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\n"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{uuid}/stop": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "put": {
        "operationId": "stop-instance-by-uuid",
        "summary": "Stop a single instance given its UUID",
        "description": "Stops the specified instance, but does not destroy it.\nAll volatile state (e.g., RAM contents) is lost.\nDoes nothing for an instance that is already stopped.\nThe instance can be started again with the [`start`](https://unikraft.cloud/docs/api/v1/instances/#start) endpoint.\n",
        "tags": [
          "instances"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": false,
            "description": "Forces immediate shutdown.\n"
          },
          {
            "name": "drain_timeout_ms",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0,
              "maximum": 3600000
            },
            "example": 0,
            "description": "Timeout for draining connections in milliseconds.\nThe instance does not receive new connections in the draining phase.\nThe instance is stopped when the last connection has been closed or the timeout expired.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\n"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              },
                              "previous_state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "description": "An instance can be in one of the following states:\n\nState     | Description\n----------|------------\n`stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting`| The instance is booting up. This usually takes just a few milliseconds.\n`running` | Your application's main entry point has been reached.\n`draining`| The instance is draining connections before shutting down. No new connections can be established.\n`stopping`| The instance is shutting down.\n`standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/wait": {
      "put": {
        "operationId": "wait-for-instances",
        "summary": "Wait for one or more instances to reach a desired state",
        "description": "Waits until the specified instance(s) have reached the desired state.\nThe request blocks until all waits in the call are satisfied or the request timed out.\n",
        "tags": [
          "instances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the instance to get the status for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the instance to get the status for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "stopped",
                        "starting",
                        "running",
                        "draining",
                        "stopping",
                        "standby"
                      ],
                      "example": "running",
                      "default": "running",
                      "description": "State to wait for.\n"
                    },
                    "timeout_ms": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Timeout for the wait in milliseconds.\n",
                      "default": -1,
                      "example": 60000,
                      "minimum": -1,
                      "maximum": 2147483647
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instances": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the instance.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "young-monkey-uq6dxq0u",
                                "description": "The name of the instance.\n"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "stopped",
                                  "starting",
                                  "running",
                                  "draining",
                                  "stopping",
                                  "standby"
                                ],
                                "example": "running",
                                "default": "running",
                                "description": "Current state of the instance.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "post": {
        "operationId": "create-services",
        "summary": "Create a service",
        "description": "Creates a new service with the given configuration.\nNote that the service properties like published ports can only be defined during creation.\nThey cannot be changed later.\n",
        "tags": [
          "services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "services"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "basename",
                    "description": "The name of the service\n\nNote: If no name is specified a random name of the form `<word>-<word>-<random>` is auto-generated, where `<random>` is an 8 characters long random alphanumeric suffix.\n",
                    "example": "my-service"
                  },
                  "services": {
                    "type": "array",
                    "maxItems": 253,
                    "items": {
                      "type": "object",
                      "required": [
                        "port"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Public-facing port",
                          "example": 8080,
                          "minimum": 1,
                          "maximum": 65535
                        },
                        "destination_port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Port that the application listens on.\n\nDefault: Same as `port`\n",
                          "example": 8080,
                          "minimum": 1,
                          "maximum": 65535
                        },
                        "handlers": {
                          "type": "array",
                          "maxItems": 253,
                          "description": "See [`Connection Handlers`](https://unikraft.cloud/docs/api/v1/services/#handlers).\n",
                          "items": {
                            "$ref": "#/components/schemas/service_mapping"
                          }
                        },
                        "domains": {
                          "type": "array",
                          "maxItems": 253,
                          "description": "Description of domains to associate with the service.\n\nDefault: auto-generated.\nNote: If `name` is specified without also providing a domain, a domain is derived from `name` by appending an 8 characters long random alphanumeric suffix and the metro's domain name.\nFor example, setting the name to `my-project` without also providing a domain results in an auto-generated domain of `my-project-<random>.fra0.kraft.host`.\n",
                          "items": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "hostname",
                                "description": "Publicly accessible domain name\n\nNote: The services published by the service will be accessible under the given domain names.\nIf `name` is a fully-qualified domain name, that is it ends with a dot (`.`), the domain name is taken as-is.\nOtherwise, the metro’s domain name is appended (e.g., `my-project` expands to `my-project.fra0.kraft.host`).\nIf the given domain name is already in use by the current or a different user the operation fails.\nIn addition, certain domain names cannot be used (e.g., `www.fra0.kraft.host`).\n",
                                "example": "my-domain"
                              },
                              "certificate": {
                                "type": "object",
                                "description": "TLS certificate to use for the domain\n\nNote: Only allowed for FQDNs, not for subdomains.\nSubdomains like `my-project` inherit the wildcard `*.<metro>.kraft.host` certificate.\nIf you specify an FQDN like `www.example.com`, Unikraft Cloud will automatically pick the certificate with the matching CN or trigger a certificate request (see [here](https://unikraft.cloud/docs/api/v1/certificates)).\n",
                                "properties": {
                                  "uuid": {
                                    "type": "string",
                                    "maxLength": 36,
                                    "format": "uuid",
                                    "description": "The UUID of the certificate.\n",
                                    "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "format": "basename",
                                    "description": "The name of the certificate.\n",
                                    "example": "my-certificate"
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "uuid"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "name"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the newly created service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the newly created service.\n",
                                "example": "young-monkey-uq6dxq0u"
                              },
                              "soft_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "default": 1,
                                "example": 100,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "hard_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "default": 65535,
                                "example": 1000,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "domains": {
                                "type": "array",
                                "maxItems": 253,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fqdn": {
                                      "type": "string",
                                      "maxLength": 255,
                                      "format": "hostname",
                                      "description": "Public fully-qualified domain name under which the service is accessible from the Internet.\n",
                                      "example": "my-project.fra0.kraft.host"
                                    },
                                    "certificate": {
                                      "type": "object",
                                      "description": "TLS certificate used for the domain.\n\nNote: Not for subdomains of `<metro>.kraft.host`.\n",
                                      "properties": {
                                        "uuid": {
                                          "type": "string",
                                          "format": "uuid",
                                          "maxLength": 36,
                                          "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                          "description": "The UUID of the certificate.\n"
                                        },
                                        "name": {
                                          "type": "string",
                                          "format": "basename",
                                          "maxLength": 255,
                                          "example": "my-certificate",
                                          "description": "The name of the certificate.\n"
                                        },
                                        "state": {
                                          "type": "string",
                                          "enum": [
                                            "valid",
                                            "pending",
                                            "error"
                                          ],
                                          "example": "valid",
                                          "description": "Current state of the certificate.\n\nA certificate can be in one of the following states:\n\nState     | Description\n----------|------------\n`pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal.\n`valid`   | The certificate is valid and can be used for services.\n`error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let’s Encrypt™ quota limits, or the domain validation process failed for some other reason. There won’t be any further automatic attempts. If you need assistence please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-services",
        "summary": "Get the status of one or more services",
        "description": "Returns the current status and the configuration of a particular service if a UUID or name is specified.\nOtherwise, returns the current status and configuration of all services.\n",
        "tags": [
          "services"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true,
            "description": "Whether to provide detailed status and configuration information.\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the service to get the status for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the service to get the status for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              },
                              "created_at": {
                                "type": "string",
                                "maxLength": 8388608,
                                "format": "date-time",
                                "description": "Date and time of creation in ISO8601.\n",
                                "example": "2021-01-01T00:00:00Z"
                              },
                              "persistent": {
                                "type": "boolean",
                                "description": "Indicates if the service will stay alive even after the last instance detached.\n",
                                "example": true
                              },
                              "autoscale": {
                                "type": "boolean",
                                "description": "Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.\n",
                                "example": true
                              },
                              "soft_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "example": 1,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "hard_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "example": 65535,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "services": {
                                "type": "array",
                                "maxItems": 253,
                                "description": "Description of published network services.\n",
                                "items": {
                                  "$ref": "#/components/schemas/service_mapping"
                                }
                              },
                              "domains": {
                                "type": "array",
                                "maxItems": 253,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fqdn": {
                                      "type": "string",
                                      "maxLength": 255,
                                      "format": "hostname",
                                      "description": "Public fully-qualified domain name under which the service is accessible from the Internet.\n",
                                      "example": "my-project.fra0.unikraft.app"
                                    },
                                    "certificate": {
                                      "$ref": "#/components/schemas/certificate"
                                    }
                                  }
                                }
                              },
                              "instances": {
                                "type": "array",
                                "maxItems": 253,
                                "description": "Instances attached to this service",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string",
                                      "maxLength": 36,
                                      "format": "uuid",
                                      "description": "The UUID of the instance.\n",
                                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                                    },
                                    "name": {
                                      "type": "string",
                                      "maxLength": 255,
                                      "format": "basename",
                                      "description": "The name of the instance.\n",
                                      "example": "my-instance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-services",
        "summary": "Delete one or more services",
        "description": "Deletes the specified service(s).\nFails if there are still instances attached to the service.\nAfter this call the IDs associated with the service are no longer valid and the domain name is released.\n",
        "tags": [
          "services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the service to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the service to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-service-by-uuid",
        "summary": "Get the status of a service given its UUID",
        "description": "Returns the current status and the configuration of a particular service if a UUID or name is specified.\nOtherwise, returns the current status and configuration of all services.\n",
        "tags": [
          "services"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Whether to provide detailed status and configuration information.\n",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              },
                              "created_at": {
                                "type": "string",
                                "maxLength": 8388608,
                                "format": "date-time",
                                "description": "Date and time of creation in ISO8601.\n",
                                "example": "2021-01-01T00:00:00Z"
                              },
                              "persistent": {
                                "type": "boolean",
                                "description": "Indicates if the service will stay alive even after the last instance detached.\n",
                                "example": true
                              },
                              "autoscale": {
                                "type": "boolean",
                                "description": "Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.\n",
                                "example": true
                              },
                              "soft_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "example": 1,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "hard_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).\n",
                                "example": 65535,
                                "minimum": 1,
                                "maximum": 65535
                              },
                              "services": {
                                "type": "array",
                                "maxItems": 253,
                                "description": "Description of published network services.\n",
                                "items": {
                                  "$ref": "#/components/schemas/service_mapping"
                                }
                              },
                              "domains": {
                                "type": "array",
                                "maxItems": 253,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fqdn": {
                                      "type": "string",
                                      "maxLength": 255,
                                      "format": "hostname",
                                      "description": "Public fully-qualified domain name under which the service is accessible from the Internet.\n",
                                      "example": "my-project.fra0.unikraft.app"
                                    },
                                    "certificate": {
                                      "$ref": "#/components/schemas/certificate"
                                    }
                                  }
                                }
                              },
                              "instances": {
                                "type": "array",
                                "maxItems": 253,
                                "description": "Instances attached to this service",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string",
                                      "maxLength": 36,
                                      "format": "uuid",
                                      "description": "The UUID of the instance.\n",
                                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                                    },
                                    "name": {
                                      "type": "string",
                                      "maxLength": 255,
                                      "format": "basename",
                                      "description": "The name of the instance.\n",
                                      "example": "my-instance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-service-by-uuid",
        "summary": "Delete a service given its UUID",
        "description": "Deletes the specified service.\nFails if there are still instances attached to the service.\nAfter this call the IDs associated with the service are no longer valid and the domain name is released.\n",
        "tags": [
          "services"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/autoscale": {
      "post": {
        "operationId": "create-autoscale-config",
        "summary": "Create autoscale configuration",
        "description": "Creates an autoscale configuration for the specified service.\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "uuid": {
                    "type": "string",
                    "maxLength": 36,
                    "format": "uuid",
                    "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                    "description": "The UUID of the service for which to create a configuration.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "hostname",
                    "example": "my-service",
                    "description": "The name of the service for which to create a configuration.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                  },
                  "min_size": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "example": 1,
                    "minimum": 1,
                    "maximum": 1,
                    "description": "Minimum number of instances.\n"
                  },
                  "max_size": {
                    "type": "integer",
                    "format": "int32",
                    "default": 4,
                    "example": 4,
                    "minimum": 1,
                    "maximum": 2147483647,
                    "description": "Maximum number of instances.\n"
                  },
                  "warmup_time_ms": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1000,
                    "example": 1000,
                    "minimum": 1,
                    "maximum": 2147483647,
                    "description": "Length of [warmup phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.\n"
                  },
                  "cooldown_time_ms": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1000,
                    "example": 1000,
                    "minimum": 1,
                    "maximum": 2147483647,
                    "description": "Length of [cooldown phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.\n"
                  },
                  "master": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "maxLength": 36,
                        "format": "uuid",
                        "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                        "description": "The UUID of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).\n"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "basename",
                        "description": "The name of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).\n",
                        "example": "my-instance"
                      },
                      "policies": {
                        "type": "array",
                        "maxItems": 253,
                        "items": {
                          "$ref": "#/components/schemas/autoscale_policy"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the certificate.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "my-certificate",
                                "description": "The name of the certificate.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-autoscale-configs",
        "summary": "Get one or more autoscale configuration",
        "description": "Returns the current autoscale configuration of the supplied service(s).\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the service.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the service.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "`success` on success, `failure` if the request failed.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/autoscale_config"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-autoscale-configs",
        "summary": "Delete one or more autoscale configurations",
        "description": "Deletes the autoscale configuration for the specified service.\nUnikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards.\nThe draining phase is allowed to take at most `cooldown_time_ms` milliseconds after which remaining connections are forcefully closed.\nThe master instance is never deleted.\nHowever, deleting the autoscale configuration causes the master instance to start if it is stopped.\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the service.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "young-monkey-uq6dxq0u",
                      "description": "The name of the service.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "maxLength": 8388608,
                                "description": "The status of the response.\n",
                                "enum": [
                                  "success",
                                  "failure"
                                ],
                                "example": "success"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{uuid}/autoscale": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-autoscale-config-by-service-uuid",
        "summary": "Get an autoscale configuration given the service UUID",
        "description": "Returns the current autoscale configuration of a service.\n",
        "tags": [
          "autoscale"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "`success` on success, `failure` if the request failed.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/autoscale_config"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-autoscale-config-by-uuid",
        "summary": "Delete an autoscale configuration given its UUID",
        "description": "Deletes the autoscale configuration for the specified service.\nUnikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards.\nThe draining phase is allowed to take at most `cooldown_time_ms` milliseconds after which remaining connections are forcefully closed.\nThe master instance is never deleted.\nHowever, deleting the autoscale configuration causes the master instance to start if it is stopped.\n",
        "tags": [
          "autoscale"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service_groups": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "maxLength": 8388608,
                                "description": "The status of the response.\n",
                                "enum": [
                                  "success",
                                  "failure"
                                ],
                                "example": "success"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the service.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the service.\n",
                                "example": "my-service"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{uuid}/autoscale/policies": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "post": {
        "operationId": "create-autoscale-policy",
        "summary": "Create an autoscale policy",
        "description": "Adds a new autoscale policy to the existing autoscale configuration of the specified service.\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "basename",
                    "description": "The name of the policy.\n",
                    "example": "my-policy"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "step"
                    ],
                    "example": "step",
                    "description": "Type of autoscale policy.\n"
                  },
                  "metric": {
                    "type": "string",
                    "default": "cpu",
                    "enum": [
                      "cpu"
                    ],
                    "example": "cpu",
                    "description": "Metric to monitor.\n"
                  },
                  "adjustment_type": {
                    "type": "string",
                    "default": "change",
                    "enum": [
                      "change",
                      "exact",
                      "percent"
                    ],
                    "example": "change",
                    "description": "Type of adjustment.\n"
                  },
                  "steps": {
                    "$ref": "#/components/schemas/autoscale_policy_step"
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "name",
                      "type",
                      "steps"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                                "description": "The UUID of the service.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "my-service",
                                "description": "The name of the service.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-autosacle-policies",
        "summary": "Get one or more autoscale policies",
        "description": "Returns the configuration of the specified autoscale policy.\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the autoscale policy to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "scale-out-policy",
                      "description": "The name of the autoscale policy to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "policies": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/autoscale_policy"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-autoscale-policies",
        "summary": "Delete one or more autoscale policies",
        "description": "Deletes the specified autoscale policies.\n",
        "tags": [
          "autoscale"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the autoscale policy to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "scale-out-policy",
                      "description": "The name of the autoscale policy to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "policies": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "failure"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "scale-out-policy",
                                "description": "The name of the policy.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{uuid}/autoscale/policies/{name}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        },
        {
          "$ref": "#/components/parameters/name"
        }
      ],
      "get": {
        "operationId": "get-autoscale-policy-by-service-uuid-and-policy-name",
        "summary": "Get a single autoscale policy",
        "description": "Returns the configuration of the specified autoscale policy.\n",
        "tags": [
          "autoscale"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "policies": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "$ref": "#/components/schemas/autoscale_policy"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-autoscale-policy-by-service-uuid-and-policy-name",
        "summary": "Delete an autoscale policy given its service uuid and policy name",
        "description": "Deletes the specified autoscale policy.\n",
        "tags": [
          "autoscale"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "policies": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "failure"
                                ],
                                "example": "success",
                                "description": "The status of the response.\n"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "example": "scale-out-policy",
                                "description": "The name of the policy.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/quotas": {
      "get": {
        "operationId": "get-quotas",
        "summary": "Get quota information for one or more users",
        "description": "Lists quota usage and limits of the specified user account.\nLimits are hard limits that cannot be exceeded.\n",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "quotas": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/user_quota"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/quotas": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uuid"
        }
      ],
      "get": {
        "operationId": "get-quota-by-uuid",
        "summary": "Get quota information given their UUID",
        "description": "Lists quota usage and limits for the provided UUID.\nLimits are hard limits that cannot be exceeded.\n",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "quotas": {
                          "type": "array",
                          "maxItems": 1,
                          "items": {
                            "$ref": "#/components/schemas/user_quota"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volumes": {
      "post": {
        "operationId": "create-volumes",
        "summary": "Create one or more persistent volumes",
        "description": "Creates one or more volumes with the given configuration.\nThe volumes are automatically initialized with an empty file system.\nAfter initialization the volumes are in the `available` state and can be attached to an instance with the [`PUT /v1/volumes/attach`](https://unikraft.cloud/docs/api/v1/volumes/#attach) endpoint.\nNote that, the size of a volume cannot be changed after creation.\n",
        "tags": [
          "volumes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "size_mb"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "description": "The name of the volume.\n\nNote: If no name is specified a random name of the form `vol-X` is auto-generated, where `X` is a 5 character long random alphanumeric suffix.\n"
                    },
                    "size_mb": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1024,
                      "minimum": 1,
                      "maximum": 1048576,
                      "description": "Size of the volume in megabytes.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "volumes": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "success",
                                  "error"
                                ],
                                "example": "success"
                              },
                              "uuid": {
                                "type": "string",
                                "maxLength": 36,
                                "format": "uuid",
                                "description": "The UUID of the volume.\n",
                                "example": "471a2a73-36db-4df9-bb63-82a45810e88a"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 255,
                                "format": "basename",
                                "description": "The name of the volume.\n",
                                "example": "my-volume"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-volumes",
        "summary": "Get the status of one or more persistent volumes",
        "description": "Returns the current status and the configuration of a particular volume if a UUID or name is specified.\nOtherwise, returns the current status and configuration of all volumes.\n",
        "tags": [
          "volumes"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Whether to provide detailed status and configuration information.\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the volume to get the status for.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "my-data",
                      "description": "The name of the volume to get the status for.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "volumes": {
                          "type": "array",
                          "maxItems": 253,
                          "items": {
                            "$ref": "#/components/schemas/volume"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-volumes",
        "summary": "Delete one or more persistent volumes",
        "description": "Deletes the specified volume(s).\nFails if the volume is still attached to an instance.\nAfter this call the IDs associated with the volume are no longer valid.\n",
        "tags": [
          "volumes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "format": "uuid",
                      "example": "471a2a73-36db-4df9-bb63-82a45810e88a",
                      "description": "The UUID of the volume to delete.\n\nNote: This property is mutually exclusive with `name` and either `uuid` or `name` are required.\n"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "format": "basename",
                      "example": "my-volume",
                      "description": "The name of the volume to delete.\n\nNote: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.\n"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An error response from the Unikraft Cloud Platform API\n",
                  "required": [
                    "status",
                    "errors"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "failure"
                      ],
                      "description": "The status of the response.\n",
                      "example": "success"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "format": "int32",
                            "example": 400,
                            "description": "HTTP status code\n"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "autoscale",
      "description": ":::caution[Limited Access]\nPlease note that autoscale is currently available for selected accounts only.\nIf you wish to explore autoscale for your services, please contact us via support@unikraft.cloud.\n:::\n\nServices allow you to load balance traffic for an Internet-facing service like a webserver by creating multiple instances within the same service.\nWhile you can add or remove instances to a service to scale your service, doing this manually makes it hard to react to changes in service load.\nOn the other hand, always keeping a large number of instances running to cope with bursts is not an option either.\nThis is where autoscale comes into play.\nWith autoscale enabled, Unikraft Cloud takes the heavy lifting of constantly monitoring\nthe load of your service and automatically creates or deletes instances as needed.\n\nTo enable autoscale a typical workflow looks like this:\n\n1) Create a new service with the desired properties (e.g., published ports, DNS name).\n2) Create a new instance of your application and assign it to the service.\nThis instance is going to be the **autoscale master** and cloned by Unikraft Cloud to scale your service.\n3) Create an autoscale configuration for the service and set the instance as master.\nThe configuration allows you to define the metrics and policies based on which Unikraft Cloud performs autoscale.\nIt also specifies the desired minimum and maximum number of instances as well as warmup and cooldown periods.\n\n\n:::note\nAutoscale as well as load balancing in general is currently only available for Internet-facing services\n:::\n\n### Warmup and Cooldown <a name=\"warmupcooldown\"></a>\n\nWhen Unikraft Cloud decides to scale out your service it grants new instances a grace period in which they have time to complete boot, warm up caches and start having an effect on the load level.\nOnly after this **warmup phase**, new instances are contributing to the evaluation of the autoscale metric.\nThis is to let the effects of the new instances on the service stabilize and prevent extensive scale out.\nNote that new instances already receive traffic and serve load while they are still warming up.\n\nConversely, Unikraft Cloud uses a **cooldown phase** to control scale in.\nDuring this phase, instances selected for scale in are given a chance to drain existing connections while already being excluded from the number of active instances in the service.\nNew connections or HTTP requests on existing connections<sup>1</sup> are assigned to different instances.\nIf there are still open connections after the cooldown phase, the remaining connections are forcefully closed.\n\n<br/>\n<small>\n<sup>1</sup>Only if the [http connection handler](/docs/api/v1/services#handlers) has been set.<br/>\n</small>\n\n### Autoscale Policies <a name=\"policies\"></a>\n\nWith autoscale policies you define under which circumstances Unikraft Cloud should scale your service and what metric (e.g., CPU utilization) should be used for the decision.\n\nUnikraft Cloud currently supports the following autoscale policies:\n\n| Policy | Description |\n--|--\n[Step](#step) | Defines concrete adjustments for selected value ranges in the metric\n\nAn autoscale configuration usually comprises multiple policies, for example, to control scale in and scale out in separate policies.\nWhen Unikraft Cloud performs autoscale decisions it always evaluates all policies and does not stop at the first applicable policy.\nIf none of the policies apply, Unikraft Cloud maintains the current number of instances.\n\n:::note\nYou can define up to 8 autoscale policies per service.\n:::\n\n#### Step Policy <a name=\"step\"></a>\n\nA step policy consists of a set of steps that define\n* a lower bound,\n* an upper bound,\n* and an adjustment.\n\nThe lower and upper bounds are always in the dimension of the selected metric.\nA bound can be set to `null` (or not provided at all) to make the step unbounded in the respective direction.\nThe interpretation of the adjustment depends on the how the step policy is configured.\nPositive values increase the number of instances, negative values decrease the number of instances.\n\nAdjustment type | Description\n--|--\n`change` | Relative change in the number of instances (e.g., +2 instances)\n`exact` | Absolute target number of instances in the service (e.g., 10 instances)\n`percent` | Change by percentage of the current number of instances in the service (e.g., +50%)\n\nAn example step policy for scaling out may look like this:\n```json frame=none\n{\n  \"name\": \"scale-out-policy\",\n  \"type\": \"step\",\n  \"metric\": \"cpu\",\n  \"adjustment_type\": \"percent\",\n  \"steps\": [\n    { \"lower_bound\": 500, \"upper_bound\": 700,  \"adjustment\": 50  },\n    { \"lower_bound\": 700, \"upper_bound\": null, \"adjustment\": 100 }\n  ]\n}\n```\nIf the CPU utilization per instance is below 500 millicores, no scaling action happens.\nIf the CPU utilization is between 500 and 700 millicores, the policy instructs Unikraft Cloud to increase the number of instances by 50%.\nIf the CPU utilization exceeds 700 millicores, the number of instances is doubled.\nThus, if the per-instance CPU load is at 600 millicores (i.e., 60%) and the current number of instances in the service is 4, Unikraft Cloud will create 2 additional instances.\n\nThere are a set of rules that steps of the same policy must adhere to:\n\n* The lower bound must be smaller than the upper bound\n* The lower and upper bound cannot be `null` in the same step\n* Steps must not overlap\n* Steps must be sorted in ascending order\n* There must be no gaps between individual steps\n\n:::note\nEach step policy can define up to 4 steps. Use more than one policy if you need more steps.\n:::\n\n### Autoscale Metrics <a name=\"metrics\"></a>\n\nYou can base autoscale decisions on different metrics.\nCurrently, Unikraft Cloud supports the following metrics:\n\nMetric | Description\n--|--\n`cpu` | Per-instance CPU utilization measured in millicores (e.g., 100 millicores corresponds to 10% CPU utilization)\n"
    },
    {
      "name": "certificates",
      "description": "Unikraft Cloud allows you to host your deployment at subdomains of `<metro>.kraft.host` and/or use custom domains (e.g., `example.com`).\n\nFor subdomains, your deployment will use the wildcard TLS certificate of the respective Unikraft Cloud metro.\n\nFor custom domains, you need a TLS certificate specifically generated for your domain.\nUnikraft Cloud automatically configures the correct TLS certificate for you for non-wildcard domains.\nTo specify a custom domain, provide the fully-qualified domain name in [`POST /v1/instances`](/docs/api/v1/instances#create) or [`POST /v1/services`](/docs/api/v1/services#create).\nUnikraft Cloud will check if any of your existing certificates applies to the domain, and if not request one using Let's Encrypt™.\n\nFor wildcard domains you have to supply your own certificate.\nIf you want to use Let's Encrypt™ you can use their DNS-based challenge and upload the resulting certificate to Unikraft Cloud.\n\n### Certificate States <a id=\"states\"></a>\n\nA certificate can be in one of the following states:\n\nState     | Description\n----------|---\n`pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal\n`valid`   | The certificate is valid and can be used by your services\n`error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let's Encrypt™ quota limits, or the domain validation process failed for some other reason. There won't be any further automatic attempts. If you need assistence please contact us via support@unikraft.cloud.\n\nThese are reported as certificate `state` by the endpoints.\n"
    },
    {
      "name": "images",
      "description": "On Unikraft Cloud, an image is comprised of your application files and binaries, as well as a highly specialized and performant unikernel or Linux kernel.\nWe store these together as an OCI image and distribute them worldwide using low-latency metro interconnects.\n\nAs images deployed to Unikraft Cloud are lightweight; transport is fast, and distributing new and updated production-ready applications takes only milliseconds to propagate (caveat: clearly if the application itself is large, the overall image will be large as well).\n\n### Image Name Reference\n\nWe follow the [OCI Distribution Specification](https://github.com/opencontainers/image-spec/blob/main/spec.md) for naming and referencing images.\nWhen referencing an image you can either reference it by its tag:\n\n```\n<USER>/<APP>:<TAG>\n```\n\nor by its SHA256 checksum:\n\n```\n<USER>/<APP>@sha256:<CHECKSUM>\n```\n\nWhere `<USER>` is the name of your user account, `<APP>` is the name of the application you want to start, `<TAG>` specifies a label applied to this application (e.g., `latest`), and `<CHECKSUM>` represents the digest of a specific version of the image.\n\nSince the latest version of an application may change when an update is pushed, Unikraft Cloud computes a SHA256-based digest of the image to uniquely identify it.\nWhenever you create a new instance from an image, Unikraft Cloud translates the tag to the image's digest and pins the instance to this particular version.\nThat is why [GET /v1/instances](/docs/api/v1/instances#status) reports a digest instead of the tag originally used to create the instance.\n\nApplications under the namespace of your user account can only be accessed by your user and are private to you.\nIn addition to private images, there are official images published by Unikraft Cloud which are accessible by just their name:\n```\n<APP>:<TAG>\n```\n"
    },
    {
      "name": "instances",
      "description": "An *instance* is a Unikraft virtual machine running a single instance of your application.\n\n### Instance States <a id=\"states\"></a>\n\nAn instance can be in one of the following states:\n\nState      | Description\n-----------|---\n`stopped`  | The instance is not running and does not count against live resource quotas. Connections cannot be established.\n`starting` | The instance is booting up. This usually takes just a few milliseconds.\n`running`  | Your application's main entry point has been reached.\n`draining` | The instance is draining connections before shutting down. No new connections can be established.\n`stopping` | The instance is shutting down.\n`standby`  | The instance has [scale-to-zero](/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.\n\nThese are reported as instance `state` by the endpoints.\n\n### Stop Reason <a id=\"stopreason\"></a>\n\nTo understand why an instance has been stopped or is in the process of shutting down, Unikraft Cloud provides information about the stop reason.\nYou can retrieve this information via the [`GET /v1/instances`](#status) endpoint when an instance is in the `draining`, `stopping`, `stopped` or `standby` state.\n\nThe `stop_reason` contains a bitmask that tells you the origin of the shutdown:\n\nBit   | 4 [F] | 3 [U] | 2 [P] | 1 [A] | 0 [K] (LSB)\n------|-------|-------|-------|-------|------------\nDesc. | This was a force stop<sup>1</sup> | Stop initiated by user<sup>1</sup> | Stop initiated by platform | App exited - `exit_code` available | Kernel exited - `stop_code` available\n\n<small>\n<sup>1</sup>A forced stop does not give the instance a chance to perform a clean shutdown. Bits 0 [K] and 1 [A] can thus never be set for forced shutdowns. Consequently, there won't be an `exit_code` or `stop_code`.<br/>\n<sup>2</sup>A stop command originating from the user is travelling through the platform controller. This is why bit 2 [P] will also always be set for user-initiated stops.<br/>\n</small>\n\nFor example, the `stop_reason` will contain the following values in the given scenarios:\n\nValue | Bitmask         | Scenario\n------|-----------------|---\n`28`  | `11100`/`FUP--` | Forced user-initiated shutdown.\n`15`  | `01111`/`-UPAK` | Regular user-initiated shutdown. The application and kernel have exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.\n`13`  | `01101`/`-UP-K` | The user initiated a shutdown but the application was forcefully killed by the kernel during shutdown. This can be the case if the image does not support a clean application exit or the application crashed after receiving a termination signal. The `exit_code` won't be present in this scenario.\n`7`   | `00111`/`--PAK` | Unikraft Cloud initiated the shutdown, for example, due to [scale-to-zero](/docs/api/v1/autoscale#scaletozero). The application and kernel have exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.\n`3`   | `00011`/`---AK` | The application exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.\n`1`   | `00001`/`----K` | The instance likely expierenced a fatal crash and the `stop_code` contains more information about the cause of the crash.\n`0`   | `00000`/`-----` | The stop reason is unknown.\n\n:::note\nThere can be a short delay of a few milliseconds between the instance reaching the `stopped` state and the `stop_reason` being updated (or vice versa).\n:::\n\n#### Exit Code\n\nThe application exit code is what the application returns upon leaving its main entry point.\nThe encoding of the `exit_code` is application specific.\nSee the documentation of the application for more details.\nUsually, an `exit_code` of `0` indicates success / no failure.\n\n#### Stop Code\n\nThe `stop_code` is defined by the kernel and has the following encoding irrespective of the application.\n\nBits | 31 - 24 (8 bits)     | 23 - 16 (8 bits) | 15 [T]         | 14 - 8 (7 bits) | 7 - 0 (8 bits)\n-----|----------------------|------------------|----------------|-----------------|---\nDesc.| reserved<sup>1</sup> | `errno`          | `shutdown_bit` |`initlvl`        | `reason`\n\n<small>\n<sup>1</sup>Reserved bits are set to 0. Ignore.\n</small>\n\n**Reason**\n`reason` can be any of the following values:\nValue | Symbol     | Scenario\n------|------------|---\n`0`   | `OK`       | Successful shutdown\n`1`   | `EXP`      | The system detected an invalid state and actively stopped execution to prevent data corruption\n`2`   | `MATH`     | An arithmetic CPU error (e.g., division by zero)\n`3`   | `INVLOP`   | Invalid CPU instruction or instruction error (e.g., wrong operand alignment)\n`4`   | `PGFAULT`  | Page fault - see `errno` for further details\n`5`   | `SEGFAULT` | Segmentation fault\n`6`   | `HWERR`    | Hardware error\n`7`   | `SECERR`   | Security violation (e.g., violation of memory access protections)\n\nA `reason` of `0` indicates that the instance was shut down cleanly.\nTo detect if the system experienced a crash, all other bits of `stop_code` can be ignored.\n\n**Init Level**\n`initlvl` indicates during which initialization or shutdown phase the instance stopped. A level of `127` indicates that the instance was executing the application when it stopped.\n\n**Shutdown Bit**\n`shutdown_bit` is set when the stop occurred while the system was shutting down.\n\n**Error Number**\n`errno` is a [Linux error code number](https://www.man7.org/linux/man-pages/man3/errno.3.html) that provides more detailed information about the root cause.\n\n:::note\nFor example, an out-of-memory (OOM) situation usually results in a page fault `PGFAULT(4)` with `errno` being `ENOMEM(12)`. Hence, the `stop_code` would be `0x000C7F04=818948` and the `stop_reason` would be `----K(1)` if the stopped occurred during application execution.\n:::\n\n### Restart Policy <a id=\"restart\"></a>\n\nWhen an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.\nAuto-restarts are performed according to the restart policy configured for a particular instance.\nThe policy can have the following values:\n\nPolicy       | Description\n-------------|---\n`never`      | Never restart the instance (default).\n`always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).\n`on-failure` | Only restart the instance if it crashes.\n\nWhen an instance stops, the stop reason and the configured restart policy are evaluated to decide if a restart should be performed.\nUnikraft Cloud uses an exponential back-off delay (immediate, 5s, 10s, 20s, 40s, ..., 5m) to slow down restarts in tight crash loops.\nIf an instance runs without problems for 10s the back-off delay is reset and the restart sequence ends.\n\nThe `restart.attempt` reported in [`GET /v1/instances`](#status) counts the number of restarts performed in the current sequence.\nThe `restart.next_at` field indicates when the next restart will take place if a back-off delay is in effect.\n\nA manual start or stop of the instance aborts the restart sequence and resets the back-off delay.\n\n### Scale-To-Zero <a name=\"scaletozero\"></a>\n\nWith conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.\nPerforming a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.\nThis is not the case with Unikraft Cloud.\nInstances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.\n\nTo enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.\nUnikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.\nWhen there is new traffic coming in, it is automatically started again.\n\nIf you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](#scaletozero_stateful).\n\n#### Policy <a name=\"scaletozero_policy\"></a>\n\nWith the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.\n\nUnikraft Cloud currently supports the following scale-to-zero policies:\n\nPolicy | Description\n-------|---\n`off`  | Scale-to-zero is not enabled. The instance keeps on running until manually stopped\n`on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby\n`idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does **not** happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` [handler](/docs/api/v1/services#handlers))\n\n:::note\nUnikraft Cloud only considers network traffic that is going through its proxy to control scale-to-zero.\nConnections that your application actively establishes to servers on the Internet **and** within Unikraft Cloud bypass the proxy for maximum performance.\nThe instance will thus be put into standby irrespective of the presence of and data sent over such connections.<br/><br/>\n\nSee how you can make Unikraft Cloud cooperate with your application in these scenarios in the [next section](#scaletozero_app).\n:::\n\n#### Application Support for Scale-To-Zero <a name=\"scaletozero_app\"></a>\n\nScale-to-zero can be used without any support from your application.\nHowever, there are cases where making your application aware of scale-to-zero makes sense.\n\n**Background Jobs** For example, you want to run background jobs after your application has responded to a request (e.g., send trace information to a logging server).\nIn this case, you may want to temporarily disable scale-to-zero to make sure your instance is not put to sleep while still performing work.\n\n**Long Request Processing** The same is true if you application can have long request processing times.\nConsider a setup where you use the `idle` policy with plain TCP connections and configure a cooldown time of 10s.\nIf it takes your application 15s to process a request until the first response data is sent, Unikraft Cloud will prematurely scale your instance to zero<sup>1</sup>.\n\nWhile configuring a longer cooldown time can be a simple solution in some cases, this is not possible if the maximum duration of background jobs or request processing phases is unknown.\nIt also means that you have to compromise between cost efficiency and reliability of your service.\n\nUnikraft Cloud allows your application to temporarily disable scale-to-zero so you can have both a short cooldown phase and reliable operation no matter how long things may take. To control scale-to-zero from within your application, instances on Unikraft Cloud provide a special file-based interface:\n\nFile                               | Description\n-----------------------------------|---\n`/uk/libukp/scale_to_zero_disable` | Allows to temporarily disable scale-to-zero\n\nThe `scale_to_zero_disable` pseudo file keeps track of the count of concurrent disable requests.\nIf the count is `0`, scale-to-zero is **not** disabled<sup>1</sup>, any number larger than `0` means scale-to-zero is temporarily disabled.\nUsing a count instead of a boolean value gives multiple independent workers of your application the ability to disable scale-to-zero individually by incrementing and decrementing the count without having to synchronize.\n\nReading the file returns the current count.\nThe value is prefixed with an equals sign (i.e., `=X` with `X` being the current count).\nWriting to the file modifies the count.\nThe following strings are accepted:\n\nString | Description\n-------|---\n`+`    | Increment the current count by one\n`-`    | Decrement the current count by one\n`=X`   | Set the count to `X`\n`+X`   | Increment the current count by `X`\n`-X`   | Decrement the current count by `X`\n\nAny attempt to write an invalid string to the file returns an `EINVAL` error.\nAny attempt to set a count less than `0` or larger than `2^64` returns an `ERANGE` error.\n\n:::caution\nWriting to the file to disable scale-to-zero does **not** atomically disable scale-to-zero.\nThere can be a short delay (usually a few milliseconds) until changing the value is communicated to the Unikraft Cloud controller which is responsible for making scale-to-zero decisions.\nMake sure to configure a cooldown time large enough to accomodate for potential signal delay.\n:::\n\n<small>\n<sup>1</sup>This is never the case for ports of your service that have the `http` handler set.<br/>\n<sup>2</sup>If it is actually enabled depends on the instance configuration.<br/>\n</small>\n\n#### Stateful Scale-To-Zero <a name=\"scaletozero_stateful\"></a>\n\nIf your application has a long cold boot phase or suffers from large first response latency, for example, to run JIT compilation and fill caches, using stateful scale-to-zero can dramatically reduce the response time of your service.\nWith stateful scale-to-zero Unikraft Cloud takes a snapshot of the instance state before putting it into standby.\nWhen incoming network traffic triggers a wakeup, the snapshot is loaded and the instance resumes execution where it left off - with caches already warm.\n\nAs the name suggests, stateful scale-to-zero can also be used to enable scale-to-zero for applications that need to keep state for functional correctness, even if cold boot times are no concern.\n\n:::note\nThe time to load an instance snapshot is roughly constant and usually in the order of a few milliseconds.\nThis is what is reported in the various boot time metrics.\nHowever, the actual memory contents is loaded from the snapshot only at first access.\nThis is to reduce response latency by loading only what is really necessary to process the request at hand.\nThis means that the first few requests might take longer until all required memory has been brought back.<br/><br/>\n\nThe time to take an instance snapshot during scale-to-zero depends on the amount of memory touched by the application since it was last started.\n:::\n"
    },
    {
      "name": "services",
      "description": "Unikraft Cloud uses *services* to implement publishing network services and creating load balanced services.\n\nA service has a public DNS name such as `my-project.fra0.kraft.host`.\nIf you do not specify a DNS name when you create a service, Unikraft Cloud generates a random DNS name of the form `young-monkey-uq6dxq0u.fra0.kraft.host`.\nWhen you assign an instance to a service, the instance becomes accessible from the Internet using this DNS name.\nUnikraft Cloud also supports [custom domains](/docs/api/v1/certificates) like `www.example.com` and wildcard domains like `*.example.com`.\n\n:::note\nExcept for unencrypted HTTP traffic on port 80, Unikraft Cloud accepts only TLS connections from the Internet.\nIt uses Server Name Indication (SNI) to forward inbound traffic to your application.\n:::\n\nBy default, a service does not publish any network ports.\nTo allow traffic to pass to the instances in a service, you have to explicitly specify the network ports to publish.\nFor example, if you run a web server you would publish port 443 (HTTPS) and/or port 80 (HTTP).\nYou can also redirect port 80 (HTTP) to port 443 (HTTPS).\n\n### Connection Handlers <a id=\"handlers\"></a>\n\nUnikraft Cloud uses connection handlers to decide how to forward connections from the Internet to your application.\nYou configure the handlers for every published service port individually.\nThe following handlers are available:\n\nHandler    | Description\n-----------|---\n`tls`      | Terminate the TLS connection at the Unikraft Cloud gateway using our wildcard certificate issued for the `kraft.cloud` domain. The gateway forwards the unencrypted traffic to your application\n`http`     | Enable HTTP mode on the load balancer to load balance on the level of individual HTTP requests. In this mode, only HTTP connections are accepted. If this option is not set the load balancer works in TCP mode and balances TCP connections\n`redirect` | Redirect traffic from the source port to the destination port\n\nCurrently, there is a set of constraints when publishing ports:\n\n- Port 80: *Must* have `http` and *must not* have `tls` set\n- Port 443: *Must* have `http` and `tls` set\n- The `redirect` handler can only be set on port 80 (HTTP) to redirect to port 443 (HTTPS)\n- All other ports *must* have `tls` and *must not* have `http` set\n\n### Load Balancing\n\nLoad balancing in Unikraft Cloud is very easy.\nAs soon as you attach more than one instance to a service, Unikraft Cloud will start balancing traffic between them.\nTherefore, only instances publishing the same ports must be part of the same service.\n\nYou can remove instances from a service at any time.\nUnikraft Cloud will immediately take the instance out of the load balancing.\n\nIf you want to make sure that no existing connections are dropped when stopping an instance, use the draining feature of the [PUT /v1/instances/stop](/docs/api/v1/instances#stop) endpoint.\n\n#### Soft-/Hard Limits <a id=\"limits\"></a>\n\nServices have soft and hard limits for the number of concurrent requests and connections.\nThe limits are applied **per instance**.\nFor HTTP services (i.e., the `http` [handler](#handlers) is set) each individual in-flight request is accounted against the limit, but not the underlying TCP connection.\nFor TCP services the individual open connections are counted.\nIn the following, we use the term request to refer to both requests and connections.\n\nThe soft limit is used by the Unikraft Cloud load balancer to decide when to wake up another [standby](/docs/api/v1/instances#states) instance.\nFor example, if the soft limit is set to 5 and the service consists of 2 standby instances, one of the instances receives up to 5 concurrent requests.\nThe 6th parallel requests wakes up the second instance.\nIf there are no more standby instances to wake up, the number of requests assigned to each instance will exceed the soft limit.\nThe load balancer makes sure that when the number of in-flight requests goes down again, instances are put into standby as fast as possible.\n\nThe hard limit defines the maximum number of concurrent requests that an instance can handle.\nThe load balancer will never assign more requests to a single instance.\nIn case there are no other instances available, excess requests fail (i.e., they are blocked and **not queued**).\n\n### Persistence\n\nWhen a service is implicitly created as part of a new instance (see [POST /v1/instances](/docs/api/v1/instances#create)) it exists only as long as its owning instance exists.\n\nIn contrast, services that you explicitly create using the [`POST /v1/services`](#create) endpoint are persistent and are not automatically deleted when the last instance leaves the service.\nYou need to delete them with the [`DELETE /v1/services`](#delete) endpoint.\n\nWhen you attach a second instance to an implicitly created service, Unikraft Cloud re-configures the service to be persistent from that point on.\n"
    },
    {
      "name": "users",
      "description": "Information about user accounts.\n"
    },
    {
      "name": "volumes",
      "description": "Unikraft Cloud allows you create persistent volumes.\n\n### InitRds vs. Volumes\n\nInitrd (initial ramdisk) and actual volumes serve different purposes.\nAn initrd is a file system loaded into memory during the boot process of the instance.\nAny new files created as well as any modifications made to files in the initrd are lost when the instance is stopped.\nIn contrast, a volume is a persistent storage device that keeps data across restarts.\nIn addition, it can be initialized with a set of files with one instance and then be detached and attached to a another one.\n\n### Volume States <a id=\"states\"></a>\n\nA volume can be in one of the following states:\n\nState           | Description\n----------------|---\n`uninitialized` | The volume is scheduled to be created\n`initializing`  | The volume is currently created and formatted\n`available`     | The volume is healthy and available to be [`attached`](#attach) to an instance\n`idle`          | The volume is healthy and attached to an instance. It is possible to [`detach`](#detach) it in this state\n`mounted`       | The volume is currently mounted in an instance\n`busy`          | There are maintenance tasks running on the volume\n`error`         | The volume is in an error state that needs inspection by a Unikraft Cloud engineer\n\nThese are reported as volume `state` by the endpoints.\n"
    }
  ]
}
