openapi: 3.1.0
info:
    title: Unikraft Cloud Platform
    version: 0.6.0
    description: |
        This is the API of the Unikraft Cloud Platform.
    license:
        name: UNLICENSED
        url: https://unikraft.cloud/company/terms
    contact:
        name: Unikraft Cloud Support
        email: info@unikraft.cloud
        url: https://unikraft.cloud/contact
servers:
    - url: https://api.{metro}.kraft.cloud/v1
      description: The Unikraft Cloud Platform API server
      variables:
        metro:
            default: fra0
            enum:
                - fra0
                - sin0
                - dal0
                - was1
components:
    schemas:
        certificate:
            type: object
            description: |
                SSL Certificate.
            properties:
                status:
                    type: string
                    enum: ["success", "failure"]
                    example: "success"
                    description: |
                        The status of the response.

                        Note: Not when listing all existing certificates.
                uuid:
                    type: string
                    format: uuid
                    maxLength: 36
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                    description: |
                        The UUID of the certificate.
                name:
                    type: string
                    format: basename
                    maxLength: 255
                    example: "my-certificate"
                    description: |
                        The name of the certificate.
                created_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-09-01T12:00:00Z"
                    description: |
                        Date and time of creation in ISO8601.
                common_name:
                    type: string
                    format: basename
                    maxLength: 255
                    example: "example.com"
                    description: |
                        Common name (CN) of the certificate.
                state:
                    type: string
                    enum: ["valid", "pending", "error"]
                    example: "valid"
                    description: |
                        Current state of the certificate.

                        A certificate can be in one of the following states:

                        State     | Description
                        ----------|------------
                        `pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal.
                        `valid`   | The certificate is valid and can be used for services.
                        `error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let’s Encrypt™ quota limits, or the domain validation process failed for some other reason. There won’t be any further automatic attempts. If you need assistence please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).
                validation:
                    type: object
                    description: |
                        Validation status (only while `pending`).
                    properties:
                        attempt:
                            type: integer
                            format: int32
                            example: 3
                            minimum: 0
                            maximum: 255
                            description: |
                                Number of validation attempts made.
                        next:
                            type: string
                            maxLength: 8388608
                            format: date-time
                            example: "2021-09-01T12:00:00Z"
                            description: |
                                Date and time of the next validation attempt in ISO8601.
                subject:
                    type: string
                    maxLength: 8388608
                    pattern: "^[a-zA-Z]+?=(?:(?![a-zA-Z]+?=.*?).)*$"
                    example: "CN=example.com"
                    description: |
                        Certificate subject.
                issuer:
                    type: string
                    maxLength: 8388608
                    pattern: "^([a-zA-Z]+?=(?:(?![a-zA-Z]+?=.*?).)*,*)*$"
                    example: "CN=R3,O=Let's Encrypt,C=US"
                    description: |
                        Certificate issuer.
                serial_number:
                    type: string
                    maxLength: 8388608
                    pattern: "^[0-9a-fA-F]{1,64}$"
                    example: "1A2B3C4D5E6F7A8B9C0D1E2F3A4B5C6D7E8F"
                    description: |
                        Certificate serial number.
                not_before:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-09-01T12:00:00Z"
                    description: |
                        Date and time of beginning of validity in ISO8601.
                not_after:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2022-09-01T12:00:00Z"
                    description: |
                        Expiration date and time in ISO8601.
                service_groups:
                    type: array
                    maxItems: 253
                    description: |
                        Services using this certificate.
                    items:
                        type: object
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                description: |
                                    The UUID of the service.
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                            name:
                                type: string
                                maxLength: 255
                                format: basename
                                description: |
                                    The name of the service.
                                example: "young-monkey-uq6dxq0u"
        image:
            type: object
            properties:
                digest:
                    type: string
                    maxLength: 8388608
                    example: "my_platform_user/myapp@sha256:c4c2919c4c2919c4c2919f03db26"
                    pattern: "^[a-zA-Z_0-9]+[a-zA-Z_0-9]+((:|@sha256:)[a-zA-Z_0-9]+)?$"
                    description: |
                        Image digest to uniquely identify this image.
                tags:
                    type: array
                    maxItems: 253
                    minItems: 0
                    description: Tags referencing this image.
                    items:
                        type: string
                        maxLength: 8388608
                        example: "v1"
                        pattern: "^[a-zA-Z_0-9]+$"
                initrd:
                    type: boolean
                    example: true
                    description: |
                        Indicates if the image comes with an init ramdisk.
                size_in_bytes:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 9223372036854775807
                    example: 123456789
                    description: |
                        Total size of the image on disk in bytes including the initrd, if any.
                args:
                    type: string
                    maxLength: 8388608
                    pattern: "^([a-zA-Z0-9=_-]+ *)*$"
                    example: "-c /etc/myapp/myapp.conf"
                    description: |
                        Default application arguments of the image.
                        Dismissed if the instance specifies application arguments.
                kernel_args:
                    type: string
                    maxLength: 8388608
                    pattern: ^([a-zA-Z0-9=_-]+ *)*$
                    example: "console=ttyS0"
                    description: |
                        Unikraft kernel arguments hardcoded into the image.
                        Prepended to the kernel arguments set by Unikraft Cloud.
                labels:
                    type: object
                    maxProperties: 253
                    example:
                        mylabel: myvalue
                    description: |
                        Key value pairs of image labels (e.g., used as defaults for instance configuration).
                    additionalProperties:
                        maxProperties: 253
                        type: string
                        maxLength: 8388608
                        pattern: "^.+$"
        instance:
            type: object
            description: |
                An application instance.
            properties:
                status:
                    type: string
                    enum: ["success", "error"]
                    example: "success"
                    description: |
                        The status of the response.

                        Note: Not when listing all existing instances.
                uuid:
                    type: string
                    maxLength: 36
                    format: uuid
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                    description: |
                        The UUID of the instance.
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    example: "young-monkey-uq6dxq0u"
                    description: |
                        The name of the instance.
                        The instance will receive a DNS entry in your private network of the form `<name>.internal`.

                        Note: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.
                created_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-09-01T12:00:00Z"
                    description: |
                        Date and time of creation in ISO8601.
                state:
                    type: string
                    enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                    example: "running"
                    description: |
                        An instance can be in one of the following states:

                        State     | Description
                        ----------|------------
                        `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                        `starting`| The instance is booting up. This usually takes just a few milliseconds.
                        `running` | Your application's main entry point has been reached.
                        `draining`| The instance is draining connections before shutting down. No new connections can be established.
                        `stopping`| The instance is shutting down.
                        `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                image:
                    type: string
                    maxLength: 8388608
                    # https://stackoverflow.com/questions/39671641/regex-to-parse-docker-tag
                    pattern: ^(?:(?=[^:\/]{1,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$
                    example: "user/app:latest"
                    description: |
                        Digest of the image that the instance uses.

                        Note: The image tag (e.g., `latest`) is translated by Unikraft Cloud to the image digest that was assigned the tag at the time of instance creation.
                        The image is pinned to this particular version.
                memory_mb:
                    type: integer
                    format: int32
                    minimum: 16
                    maximum: 4096
                    example: 512
                    description: |
                        Amount of memory assigned to the instance in megabytes.
                args:
                    type: array
                    maxItems: 253
                    items:
                        type: string
                        maxLength: 8388608
                        pattern: "^.+$"
                    example: ["--port", "8080"]
                    description: |
                        Application arguments.
                env:
                    type: object
                    properties:
                        additionalProperties:
                            maxProperties: 253
                            type: string
                            maxLength: 8388608
                            pattern: "^.+$"
                    example: {"port": "8080", "debug": "true"}
                    description: |
                        Key/value pairs to be set as environment variables at boot time.
                        Values must be strings.
                start_count:
                    type: integer
                    format: int32
                    example: 3
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Total number of times the instance has been started.
                started_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-09-01T12:00:00Z"
                    description: |
                        Date and time of last start in ISO8601.
                stopped_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-09-01T12:00:00Z"
                    description: |
                        If stopped, date and time of stop in ISO8601.
                uptime_ms:
                    type: integer
                    format: int64
                    example: 3600000
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total uptime in milliseconds.
                rss_bytes:
                    type: integer
                    format: int64
                    example: 5121024
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Resident set size (RSS) of the VMM in bytes (see [here](https://unikraft.cloud/docs/api/v1/instances/#metrics) for remarks on RSS).

                        Note: Only with `metrics=true` query parameter.
                cpu_time_ms:
                    type: integer
                    format: int64
                    example: 3600000
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total consumed CPU time in milliseconds.

                        Note: Only with `metrics=true` query parameter.
                nconns:
                    type: integer
                    format: int32
                    example: 42
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of currently established inbound connections (non-HTTP).

                        Note: Only with `metrics=true` query parameter.
                nreqs:
                    type: integer
                    format: int32
                    example: 42
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of in-flight HTTP requests.

                        Note: Only with `metrics=true` query parameter.
                nqueued:
                    type: integer
                    format: int32
                    example: 42
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of queued inbound connections and HTTP requests.

                        Note: Only with `metrics=true` query parameter.
                ntotal:
                    type: integer
                    format: int64
                    example: 42
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total number of inbound connections and HTTP requests handled.

                        Note: Only with `metrics=true` query parameter.
                vmm_start_time_us:
                    type: integer
                    format: int32
                    example: 3600000
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Time from start of instance to VMM process start in microseconds.

                        Note: Only with Unikraft Cloud developer permissions.
                vmm_load_time_us:
                    type: integer
                    format: int32
                    example: 3600000
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Time from start of instance to finish loading of initrd and kernel into instance in microseconds.

                        Note: Only with Unikraft Cloud developer permissions.
                vmm_ready_time_us:
                    type: integer
                    format: int32
                    example: 3600000
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Time from start of instance to entering instance execution in microseconds.

                        Note: Only with Unikraft Cloud developer permissions.
                boot_time_us:
                    type: integer
                    format: int32
                    example: 3600000
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Time from start of instance to finish booting of Unikraft in microseconds.
                net_time_us:
                    type: integer
                    format: int32
                    example: 3600000
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Time from start of instance to first listen socket in microseconds.

                        Note: Only with Unikraft Cloud developer permissions.
                stop_reason:
                    type: integer
                    format: int32
                    example: 15
                    minimum: 0
                    maximum: 255
                    description: |
                        Reason for ongoing or current stop (see [here](https://unikraft.cloud/docs/api/v1/instances/#stopreason)).
                exit_code:
                    type: integer
                    format: int32
                    example: 0
                    minimum: 0
                    maximum: 255
                    description: |
                        Exit code of the application.
                stop_code:
                    type: integer
                    format: int32
                    example: 33024
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Stop code of the kernel (see [here](https://unikraft.cloud/docs/api/v1/instances/#stopreason)).
                restart_policy:
                    type: string
                    default: "never"
                    example: "never"
                    enum: ["always", "on-failure", "never"]
                    description: |
                        When an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.
                        Auto-restarts are performed according to the restart policy configured for a particular instance.
                        The policy can have the following values:

                        Policy       | Description
                        -------------|------------
                        `always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).
                        `on-failure` | Only restart the instance if it crashes.
                        `never`      | Never restart the instance (default).
                restart:
                    type: object
                    description: |
                        Information about [auto-restarts](https://unikraft.cloud/docs/api/v1/instances/#restart).
                    properties:
                        attempt:
                            type: integer
                            format: int32
                            description: |
                                Number of restarts performed in the current restart sequence.
                            example: 3
                            minimum: 0
                            maximum: 65535
                        next_at:
                            type: string
                            maxLength: 8388608
                            format: date-time
                            description: |
                                Date and time of next restart attempt in ISO8601.
                            example: "2021-09-01T12:00:00Z"
                restart_count:
                    type: integer
                    format: int32
                    example: 3
                    minimum: 0
                    maximum: 4294967295
                    description: |
                        Total number of times the instance has been restarted by restart policy.
                scale_to_zero:
                    type: object
                    required:
                        - policy
                    description: |
                        With conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.
                        Performing a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.
                        This is not the case with Unikraft Cloud. Instances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.

                        To enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.
                        Unikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.
                        When there is new traffic coming in, it is automatically started again.

                        If you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful).
                    properties:
                        policy:
                            type: string
                            example: "off"
                            enum: ["on", "off", "idle"]
                            description: |
                                With the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.

                                Unikraft Cloud currently supports the following scale-to-zero policies:

                                Policy | Description
                                -------|------------
                                `on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby
                                `off`  | Scale-to-zero is not enabled. The instance keep on running until manually stopped
                                `idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does not happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` handler as described [here](https://unikraft.cloud/docs/api/v1/services#handlers))
                        stateful:
                            type: boolean
                            default: false
                            example: false
                            description: |
                                Whether to use [stateful](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful) scale-to-zero.
                        cooldown_time_ms:
                            type: integer
                            format: int32
                            default: 1000
                            example: 1000
                            minimum: 0
                            maximum: 86400000
                            description: |
                                Cooldown time in milliseconds.
                snapshot:
                    type: object
                    properties:
                        uuid:
                            type: string
                            maxLength: 36
                            format: uuid
                            description: |
                                The UUID of the snapshot.
                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                private_fqdn:
                    type: string
                    maxLength: 8388608
                    pattern: "^[a-zA-Z0-9.-]+.internal$"
                    example: "young-monkey.internal"
                    description: |
                        Fully-qualified domain name under which the instance is accessible in the private network.
                private_ip:
                    type: string
                    maxLength: 15
                    format: ipv4
                    example: "172.16.19.23"
                    description: |
                        Private IPv4 of the instance for communication between instances of the same user.
                        This is equivalent to the IPv4 address of the first network interface.
                service_group:
                    type: object
                    description: |
                        Description of the service that the instance is part of.

                        Note: Only if attached to a service.
                    properties:
                        name:
                            type: string
                            maxLength: 255
                            format: basename
                            example: "my-service"
                            description: |
                                The name of an existing service.

                                Note: You need to specify either an existing [service](https://unikraft.cloud/docs/api/v1/services) via `uuid` or `name`, or provide a description of a new service.
                                If a description for a new service is provided, the service is created and the instance attached.
                                The service will receive an auto-generated name.
                                Specifying an empty `service_group` object creates a new service with no services published.
                        uuid:
                            type: string
                            maxLength: 36
                            format: uuid
                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                            description: |
                                UUID of an existing service.
                        domains:
                            type: array
                            maxItems: 253
                            description: |
                                Description of domains to associate with the service.

                                Default: auto-generated
                                Note: If `name` is specified without also providing a domain, a domain is derived from `name` by appending an 8 characters long random alphanumeric suffix and the metro's domain name.
                                For example, setting the name to `my-project` without also providing a domain results in an auto-generated domain of `my-project-<random>.fra0.kraft.host`.
                            items:
                                type: object
                                required:
                                    - name
                                properties:
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: hostname
                                        example: "my-instance"
                                        description: |
                                            Publicly accessible domain name.

                                            Note: The services published by the service will be accessible under the given domain names.
                                            If `name` is a fully-qualified domain name, that is it ends with a dot (`.`), the domain name is taken as-is.
                                            Otherwise, the metro’s domain name is appended (e.g., `my-project` expands to `my-project.fra0.kraft.host`).
                                            If the given domain name is already in use by the current or a different user the operation fails.
                                            In addition, certain domain names cannot be used (e.g., `www.fra0.kraft.host`).
                                    certificate:
                                        type: object
                                        oneOf:
                                            - required: ["uuid"]
                                            - required: ["name"]
                                        description: |
                                            TLS certificate to use for the domain.

                                            Note: Only allowed for FQDNs, not for subdomains.
                                            Subdomains like `my-project` inherit the wildcard `*.<metro>.kraft.host` certificate.
                                            If you specify an FQDN like `www.example.com`, Unikraft Cloud will automatically pick the certificate with the matching CN or trigger a certificate request (see [here](https://unikraft.cloud/docs/api/v1/certificates)).
                                        properties:
                                            uuid:
                                                type: string
                                                maxLength: 36
                                                format: uuid
                                                description: UUID of the certificate
                                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                            name:
                                                type: string
                                                maxLength: 255
                                                format: basename
                                                description: Name of the certificate
                                                example: "my-certificate"
                volumes:
                    type: array
                    maxItems: 253
                    description: |
                        Description of [volumes](https://unikraft.cloud/docs/api/v1/volumes).
                    items:
                        type: object
                        oneOf:
                            - required: ["uuid", "at"]
                            - required: ["name", "at"]
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                description: |
                                    UUID of an existing volume.
                                    Must be in `available` [state](https://unikraft.cloud/docs/api/v1/volumes#states).
                            name:
                                type: string
                                maxLength: 255
                                format: basename
                                example: "my-volume"
                                description: |
                                    The name of the volume to attach.

                                    Note: You need to specify either `uuid`, `name`, or `size_mb`.
                                    Specifying `size_mb` will create a new [volume](https://unikraft.cloud/docs/api/v1/volumes) and attach it to the instance.
                                    The volume will receive an auto-generated name.
                            at:
                                type: string
                                maxLength: 8388608
                                pattern: "^(/[ a-zA-Z0-9._-]*)*$"
                                example: "/home/user"
                                description: |
                                    Path of the mountpoint.
                                    Must be empty.
                                    Automatically created if it does not exist.
                            readonly:
                                type: boolean
                                default: false
                                example: false
                                description: |
                                    Whether the volume should be mounted read-only.
                network_interfaces:
                    type: array
                    maxItems: 253
                    description: |
                        List of network interfaces attached to the instance.
                    items:
                        type: object
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                description: |
                                    The UUID of the network interface.
                            private_ip:
                                type: string
                                maxLength: 15
                                format: ipv4
                                example: "172.16.19.23"
                                description: |
                                    Private IPv4 of network interface.
                            mac:
                                type: string
                                maxLength: 17
                                pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
                                example: "00:00:5e:00:53:01"
                                description: |
                                    MAC address of the network interface.
                            rx_bytes:
                                type: integer
                                format: int64
                                example: 123456
                                minimum: 0
                                maximum: 9223372036854775807
                                description: |
                                    Amount of bytes received from interface.

                                    Note: Only with `metrics=true` query parameter.
                            rx_packets:
                                type: integer
                                format: int64
                                example: 123456
                                minimum: 0
                                maximum: 9223372036854775807
                                description: |
                                    Count of packets received from interface.

                                    Note: Only with `metrics=true` query parameter.
                            tx_bytes:
                                type: integer
                                format: int64
                                example: 123456
                                minimum: 0
                                maximum: 9223372036854775807
                                description: |
                                    Amount of bytes transmitted over interface.

                                    Note: Only with `metrics=true` query parameter.
                            tx_packets:
                                type: integer
                                format: int64
                                example: 123456
                                minimum: 0
                                maximum: 9223372036854775807
                                description: |
                                    Count of packets transmitted over interface.

                                    Note: Only with `metrics=true` query parameter.
        instance_metrics:
            type: object
            properties:
                status:
                    type: string
                    enum: ["success", "error"]
                    example: "success"
                    description: |
                        The status of the response.
                uuid:
                    type: string
                    maxLength: 36
                    format: uuid
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                    description: |
                        The UUID of the instance.
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    example: "young-monkey-uq6dxq0u"
                    description: |
                        The name of the instance.
                rss_bytes:
                    type: integer
                    format: int64
                    example: 123456789
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Resident set size of the VMM in bytes.

                        Note: The resident set size (RSS) specifies the amount of physical memory that has been touched by the instance and is currently reserved for the instance on the Unikraft Cloud server.
                        The RSS grows until the instance has touched all memory assigned to it via the `memory_mb` setting and may also exceed this value as supporting services running outside the instance acquire memory.
                        The RSS is different from the current amount of memory allocated by the application, which is likely to fluctuate over the lifetime of the application.
                        The RSS is not a cumulative metric.
                        When the instance is stopped `rss` goes down to 0.
                cpu_time_ms:
                    type: integer
                    format: int64
                    example: 230
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Consumed CPU time in milliseconds.
                rx_bytes:
                    type: integer
                    format: int64
                    example: 431412
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total amount of bytes received from network.
                rx_packets:
                    type: integer
                    format: int64
                    example: 1233
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total count of packets received from network.
                tx_bytes:
                    type: integer
                    format: int64
                    example: 432432
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total amount of bytes transmitted over network.
                tx_packets:
                    type: integer
                    format: int64
                    example: 431412
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total count of packets transmitted over network.
                nconns:
                    type: integer
                    format: int32
                    example: 2424
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of currently established inbound connections (non-HTTP).
                nreqs:
                    type: integer
                    format: int32
                    example: 1235
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of in-flight HTTP requests.
                nqueued:
                    type: integer
                    format: int32
                    example: 12353
                    minimum: 0
                    maximum: 65535
                    description: |
                        Number of queued inbound connections and HTTP requests.
                ntotal:
                    type: integer
                    format: int64
                    example: 43431
                    minimum: 0
                    maximum: 9223372036854775807
                    description: |
                        Total number of inbound connections and HTTP requests handled.
        service:
            type: object
            properties:
                status:
                    type: string
                    enum: ["success", "error"]
                    description: |
                        The status of the response.
                uuid:
                    type: string
                    maxLength: 36
                    format: uuid
                    description: |
                        The UUID of the service.
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    description: |
                        The name of the service.
                    example: "my-service"
                created_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    description: |
                        Date and time of creation in ISO8601.
                    example: "2021-01-01T00:00:00Z"
                persistent:
                    type: boolean
                    description: |
                        Indicates if the service will stay alive even after the last instance detached.
                    example: true
                autoscale:
                    type: boolean
                    description: |
                        Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.
                    example: true
                soft_limit:
                    type: integer
                    format: int32
                    description: |
                        Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                    example: 1
                    minimum: 1
                    maximum: 65535
                hard_limit:
                    type: integer
                    format: int32
                    description: |
                        Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                    example: 65535
                    minimum: 1
                    maximum: 65535
                services:
                    type: array
                    maxItems: 253
                    description: |
                        Description of published network services.
                    items:
                        $ref: "#/components/schemas/service_mapping"
                domains:
                    type: array
                    maxItems: 253
                    items:
                        type: object
                        properties:
                            fqdn:
                                type: string
                                maxLength: 255
                                format: hostname
                                description: |
                                    Public fully-qualified domain name under which the service is accessible from the Internet.
                                example: "my-project.fra0.unikraft.app"
                            certificate:
                                $ref: "#/components/schemas/certificate"
                instances:
                    type: array
                    maxItems: 253
                    description: Instances attached to this service
                    items:
                        type: object
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                description: |
                                    The UUID of the instance.
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                            name:
                                type: string
                                maxLength: 255
                                format: basename
                                description: |
                                    The name of the instance.
                                example: "my-instance"
        service_mapping:
            type: object
            required:
                - port
            properties:
                port:
                    type: integer
                    format: int32
                    description: |
                        Public-facing port.
                    example: 8080
                    minimum: 1
                    maximum: 65535
                destination_port:
                    type: integer
                    format: int32
                    description: |
                        Application port to which inbound traffic is redirected.
                    example: 8080
                    minimum: 1
                    maximum: 65535
                handlers:
                    type: array
                    maxItems: 253
                    description: |
                        See [Connection Handlers](https://unikraft.cloud/docs/api/v1/services/#handlers).
                    items:
                        type: string
                        enum: ["tls", "http", "redirect"]
                        example: "tls"
                        description: |
                            Unikraft Cloud uses connection handlers to decide how to forward connections from the Internet to your application.
                            You configure the handlers for every published service port individually.
                            The following handlers are available:

                            Handler   | Description
                            ----------|------------
                            `tls`     | Terminate the TLS connection at the Unikraft Cloud gateway using our wildcard certificate issued for the `kraft.cloud` domain. The gateway forwards the unencrypted traffic to your application
                            `http`    | Enable HTTP mode on the load balancer to load balance on the level of individual HTTP requests. In this mode, only HTTP connections are accepted. If this option is not set the load balancer works in TCP mode and balances TCP connections
                            `redirect`| Redirect traffic from the source port to the destination port

                            Currently, there is a set of constraints when publishing ports:
                            * Port 80: Must have `http` and must not have `tls` set
                            * Port 443: Must have `http` and `tls` set
                            * The `redirect` handler can only be set on port 80 (HTTP) to redirect to port 443 (HTTPS)
                            * All other ports must have `tls` and must not have `http` set
        autoscale_config:
            type: object
            properties:
                status:
                    type: string
                    maxLength: 12
                    description: |
                        `success` on success, `unconfigured` if autoscale is not configured, or `error` if the request failed.
                    enum: ["success", "unconfigured", "failure"]
                    example: "success"
                uuid:
                    type: string
                    maxLength: 36
                    format: uuid
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                    description: |
                        The UUID of the service.
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    example: "my-service"
                    description: |
                        The name of the service.
                enabled:
                    type: boolean
                    example: true
                    description: |
                        Whether autoscale is enabled.
                min_size:
                    type: integer
                    format: int32
                    example: 1
                    minimum: 1
                    maximum: 1
                    description: |
                        Minimum number of instances.
                max_size:
                    type: integer
                    format: int32
                    example: 4
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Maximum number of instances.
                        Maximum number is determined by the quota.
                warmup_time_ms:
                    type: integer
                    format: int32
                    example: 1000
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Length of [warmup phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.
                cooldown_time_ms:
                    type: integer
                    format: int32
                    example: 1000
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Length of [cooldown phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.
                master:
                    type: object
                    properties:
                        uuid:
                            type: string
                            maxLength: 36
                            format: uuid
                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                            description: |
                                The UUID of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).
                        name:
                            type: string
                            maxLength: 255
                            format: basename
                            example: "my-instance"
                            description: |
                                The name of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).
                policies:
                    type: array
                    maxItems: 253
                    items:
                        $ref: "#/components/schemas/autoscale_policy"
        autoscale_policy:
            type: object
            description: |
                Description of [autoscale policies](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-policies).
                See [policy creation endpoint](https://unikraft.cloud/docs/api/v1/autoscale/#policy_create).
            properties:
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    example: "my-policy"
                    description: |
                        The name of the policy.
                metric:
                    type: string
                    default: "cpu"
                    enum: ["cpu"]
                    example: "cpu"
                    description: |
                        Metric to monitor.
                type:
                    type: string
                    enum: ["step"]
                    example: "step"
                    description: |
                        Type of autoscale policy.
                adjustment_type:
                    type: string
                    default: "change"
                    enum: ["change", "exact", "percent"]
                    example: "change"
                    description: |
                        Type of adjustment.
                steps:
                    type: array
                    maxItems: 253
                    items:
                        $ref: "#/components/schemas/autoscale_policy_step"
        autoscale_policy_step:
            type: object
            description: |
                Step policy.

                Note: Only one of `lower_bound` and `upper_bound` can be `null` or not specified.
                See the description of the step policy for more information on defining steps.
            properties:
                lower_bound:
                    type: integer
                    format: int32
                    example: 0
                    minimum: -2147483647
                    maximum: 2147483647
                    description: |
                        Lower bound of the step range.
                        In dimension of selected metric.
                upper_bound:
                    type: integer
                    format: int32
                    example: 100
                    minimum: -2147483647
                    maximum: 2147483647
                    description: |
                        Upper bound of the step range.
                        In dimension of selected metric.
                adjustment:
                    type: integer
                    format: int32
                    example: 1
                    minimum: -2147483647
                    maximum: 2147483647
                    description: |
                        Adjustment to take if metric is in range.
        user_quota:
            type: object
            properties:
                used:
                    $ref: "#/components/schemas/user_quota_used"
                hard:
                    $ref: "#/components/schemas/user_quota_hard"
                limits:
                    $ref: "#/components/schemas/user_quota_limits"
        user_quota_used:
            type: object
            description: |
                Used quota.
            properties:
                instances:
                    type: integer
                    format: int32
                    example: 2
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Number of created instances.
                live_instances:
                    type: integer
                    format: int32
                    example: 1
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Number of instances that are not in the `stopped` state.
                live_memory_mb:
                    type: integer
                    format: int32
                    example: 1024
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Amount of memory assigned to instances that are not in the `stopped` state in megabytes.
                service_groups:
                    type: integer
                    format: int32
                    example: 253
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Number of services.
                services:
                    type: integer
                    format: int32
                    example: 253
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Number of published network ports over all existing services.
                volumes:
                    type: integer
                    format: int32
                    example: 16
                    minimum: 0
                    maximum: 2147483647
                    description: |
                        Number of volumes.
                total_volume_mb:
                    type: integer
                    format: int32
                    example: 16384
                    minimum: 0
                    maximum: 1048576
                    description: |
                        Total size of all volumes in megabytes.
        user_quota_hard:
            type: object
            description: |
                Hard quota limits.
            instances:
                type: integer
                format: int32
                example: 2
                minimum: 0
                maximum: 2147483647
                description: |
                    Number of created instances.
            live_instances:
                type: integer
                format: int32
                example: 1
                minimum: 0
                maximum: 2147483647
                description: |
                    Number of instances that are not in the `stopped` state.
            live_memory_mb:
                type: integer
                format: int32
                example: 1024
                minimum: 0
                maximum: 2147483647
                description: |
                    Amount of memory assigned to instances that are not in the `stopped` state in megabytes.
            service_groups:
                type: integer
                format: int32
                example: 253
                minimum: 0
                maximum: 2147483647
                description: |
                    Number of services.
            services:
                type: integer
                format: int32
                example: 253
                minimum: 0
                maximum: 2147483647
                description: |
                    Number of published network ports over all existing services.
            volumes:
                type: integer
                format: int32
                example: 16
                minimum: 0
                maximum: 2147483647
                description: |
                    Number of volumes.
            total_volume_mb:
                type: integer
                format: int32
                example: 16384
                minimum: 0
                maximum: 1048576
                description: |
                    Total size of all volumes in megabytes.
        user_quota_limits:
            type: object
            description: |
                Additional limits.
            properties:
                min_memory_mb:
                    type: integer
                    format: int32
                    example: 128
                    minimum: 16
                    maximum: 2147483647
                    description: |
                        Minimum amount of memory assigned to live instances in megabytes.
                max_memory_mb:
                    type: integer
                    format: int32
                    example: 4096
                    minimum: 4096
                    maximum: 2147483647
                    description: |
                        Maximum amount of memory assigned to live instances in megabytes.
                min_volume_mb:
                    type: integer
                    format: int32
                    example: 1
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Minimum size of a volume in megabytes.
                max_volume_mb:
                    type: integer
                    format: int32
                    example: 1024
                    minimum: 1024
                    maximum: 2147483647
                    description: |
                        Maximum size of a volume in megabytes.
                min_autoscale_size:
                    type: integer
                    format: int32
                    example: 1
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Minimum size of an autoscale group

                        Note: These restrict the `min_size` and `max_size` fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics).
                        If both values are `1` autoscale is not enabled for your account.
                        If you want to explore autoscale for your services, please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).
                max_autoscale_size:
                    type: integer
                    format: int32
                    example: 16
                    minimum: 1
                    maximum: 2147483647
                    description: |
                        Maximum size of an autoscale group.

                        Note: These restrict the `min_size` and `max_size` fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics).
        volume:
            type: object
            properties:
                status:
                    type: string
                    enum: ["success", "error"]
                    example: "success"
                    description: |
                        The status of the response.

                        Note: Not when listing all existing volumes.
                state:
                    type: string
                    enum:
                        - uninitialized
                        - initialized
                        - available
                        - idle
                        - mounted
                        - busy
                        - error
                    example: "available"
                    description: |
                        A volume can be in one of the following states:

                        State           | Description
                        ----------------|---
                        `uninitialized` | The volume is scheduled to be created.
                        `initialized`   | The volume is currently created and formatted.
                        `available`     | The volume is healthy and available to be attached to an instance.
                        `idle`          | The volume is healthy and attached to an instance. It is possible to [detach](https://unikraft.cloud/docs/api/v1/volumes/#detach) it in this state.
                        `mounted`       | The volume is currently mounted in an instance.
                        `busy`          | There are maintenance tasks running on the volume.
                        `error`         | The volume is in an error state that needs inspection by a Unikraft Cloud engineer.
                uuid:
                    type: string
                    maxLength: 36
                    format: uuid
                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                    description: |
                        The UUID of the volume.
                name:
                    type: string
                    maxLength: 255
                    format: basename
                    example: "my-volume"
                    description: |
                        The name of the volume.
                size_mb:
                    type: integer
                    format: int32
                    example: 1024
                    minimum: 1
                    maximum: 1048576
                    description: |
                        Size of the volume in megabytes.
                attached_to:
                    type: array
                    maxItems: 253
                    description: |
                        List of instances that this volume is attached to.
                    items:
                        type: object
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                description: |
                                    The UUID of the instance the volume is attached to.
                            name:
                                type: string
                                maxLength: 255
                                format: basename
                                example: "my-instance"
                                description: |
                                    The name of the instance the volume is attached to.
                mounted_by:
                    type: array
                    maxItems: 253
                    description: |
                        List of instances that have this volume mounted.
                    items:
                        type: object
                        properties:
                            uuid:
                                type: string
                                maxLength: 36
                                format: uuid
                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                description: |
                                    The UUID of the instance.
                            name:
                                type: string
                                maxLength: 255
                                format: basename
                                example: "my-instance"
                                description: |
                                    The name of the instance.
                            readonly:
                                type: boolean
                                example: false
                                description: |
                                    Whether the volume is mounted read-only or read-write.
                persistent:
                    type: boolean
                    description: |
                        Indicates if the volume will stay alive when the last instance is deleted that this volume is attached to.
                created_at:
                    type: string
                    maxLength: 8388608
                    format: date-time
                    example: "2021-01-01T00:00:00Z"
                    description: |
                        Date and time of creation in ISO8601.
    securitySchemes:
        bearerAuth:
            description: |
                Unikraft Cloud personal access token.
            type: http
            scheme: bearer
            bearerFormat: base64
    parameters:
        uuid:
            name: uuid
            in: path
            required: true
            description: |
                The UUID of the resource.
                The UUID is a 36-character string that uniquely identifies the resource.
                The UUID is returned by the API after creating a resource.
            schema:
                type: string
                maxLength: 36
                format: uuid
                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
        name:
            name: name
            in: path
            required: true
            description: |
                The name of the resource.
                The name is a string that identifies the resource.
                The name is sometimes returned by the API after creating a resource.
            schema:
                type: string
                maxLength: 255
                format: basename
paths:
    /certificates:
        post:
            operationId: create-certificate
            summary: Upload a certificate
            description: |
                Create a new certificate object and upload an existing certificate chain and private key.
            tags:
                - certificates
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    format: basename
                                    maxLength: 255
                                    description: |
                                        The name of the certificate to upload.

                                        Note: If no name is specified a random name of the form `<cn>-X` is auto-generated, where `<cn>` is the common name and `X` is a 5 character long random alphanumeric suffix.
                                        For wildcard domains the wildcard part is cut off.
                                    example: "my-certificate"
                                cn:
                                    type: string
                                    format: basename
                                    maxLength: 255
                                    description: |
                                        The common name of the certificate.
                                    example: "example.com"
                                chain:
                                    type: string
                                    pattern: "^-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----"
                                    maxLength: 8388608
                                    description: |
                                        The chain of the certificate in PEM format.
                                    example: "-----BEGIN CERTIFICATE-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDQ...-----END CERTIFICATE-----"
                                pkey:
                                    type: string
                                    pattern: "^-----BEGIN PRIVATE KEY-----.+-----END PRIVATE KEY-----"
                                    maxLength: 8388608
                                    description: |
                                        The private key of the certificate in PEM format.
                                    example: "-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDQ...-----END PRIVATE KEY-----"
                            required:
                                - cn
                                - chain
                                - pkey
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        uuid:
                                                            type: string
                                                            format: uuid
                                                            maxLength: 36
                                                            description: UUID of the certificate
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            format: basename
                                                            maxLength: 255
                                                            description: Name of the certificate
                                                            example: "my-certificate"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-certificates
            summary: Delete one or more certificates
            description: |
                Deletes the specified certificate(s).
                Fails if the certificate is still attached to a service.
                After this call the IDs associated with the certificate are no longer valid.
            tags:
                - certificates
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the certificate to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "example.com-4i1j7"
                                        description: |
                                            The name of the certificate to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the certificate.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "my-certificate"
                                                            description: |
                                                                The name of the certificate.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-certificates
            summary: Get the status of one or more certificates
            description: |
                Returns the current status and the properties of specified certificate(s).
            tags:
                - certificates
            parameters:
                - name: details
                  in: query
                  required: false
                  schema:
                    default: true
                    type: boolean
                  description: |
                    Whether to provide detailed status and configuration information.
                  example: true
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the certificate to retrieve.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "example.com-4i1j7"
                                        description: |
                                            The name of the certificate to retrieve.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/certificate"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /certificates/{uuid}:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-certificate-by-uuid
            summary: Get the status of a certificate given its UUID
            description: |
                Returns the current status and the properties of a certificate.
            tags:
                - certificates
            parameters:
                - name: details
                  in: query
                  required: false
                  style: form
                  schema:
                    type: boolean
                    default: true
                  example: true
                  description: |
                    Whether to provide detailed status and configuration information.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    $ref: "#/components/schemas/certificate"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-certificate-by-uuid
            summary: Delete a single certificate given its UUID
            description: |
                Deletes the specified certificate.
                Fails if the certificate is still attached to a service.
                After this call the IDs associated with the certificate are no longer valid.
            tags:
                - certificates
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the certificate.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "my-certificate"
                                                            description: |
                                                                The name of the certificate.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /images/list:
        get:
            operationId: get-images
            summary: Get list of available images
            description: |
                Retrieves all images visible to an account in OCI format.
            tags:
                - images
            parameters:
                - name: namespace
                  in: query
                  required: false
                  schema:
                    type: string
                    maxLength: 2048
                    pattern: "^[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?$"
                  example: "my_platform_user/myapp"
                  description: |
                    Filter images by namespace.

                    Note: Set the namespace to your Unikraft Cloud account name to list only your personal images.
                    It can be `official` for listing only the official ones.
                    In addition, the namespace can include the app name.
                    For example, `${UKC_USER}/myapp` to list all your `myapp` images.
                - name: tagged
                  in: query
                  required: false
                  schema:
                    type: boolean
                    default: false
                  example: false
                  description: |
                    Whether to include only tagged images.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                oneOf:
                                    - required: [digest]
                                    - required: [tagged]
                                properties:
                                    digest:
                                        type: string
                                        maxLength: 255
                                        example: "user/app@sha256:caf83482bb0a5b091b8648116a2723118c55efb2835e865d857286d7df9f2999"
                                        pattern: "^[a-zA-Z_0-9]+[a-zA-Z_0-9]+((:|@sha256:)[a-zA-Z_0-9]+)?$"
                                        description: |
                                            Image digest to lookup.
                                    tagged:
                                        type: string
                                        maxLength: 8388608
                                        pattern: "^[a-zA-Z0-9_-]+$"
                                        example: "user/app:latest"
                                        description: |
                                            Image tag to lookup.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            images:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/image"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances:
        post:
            operationId: create-instance
            summary: Create an instance
            description: |
                Creates a new instance of the specified Unikraft Cloud image.
                You can describe the properties of the new instance such as its startup arguments and amount of memory.
                Note that the instance properties can only be defined during creation.
                They cannot be changed later.
            tags:
                - instances
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - image
                            properties:
                                name:
                                    type: string
                                    maxLength: 255
                                    format: basename
                                    example: "young-monkey-uq6dxq0u"
                                    description: |
                                        The name of the instance.
                                        The instance will receive a DNS entry in your private network of the form `<name>.internal`.

                                        Note: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.
                                image:
                                    type: string
                                    maxLength: 8388608
                                    # https://stackoverflow.com/questions/39671641/regex-to-parse-docker-tag
                                    pattern: ^(?:(?=[^:\/]{1,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$
                                    example: "user/app:latest"
                                    description: |
                                        Digest of the image that the instance uses.

                                        Note: The image tag (e.g., `latest`) is translated by Unikraft Cloud to the image digest that was assigned the tag at the time of instance creation.
                                        The image is pinned to this particular version.
                                args:
                                    type: array
                                    maxItems: 253
                                    items:
                                        type: string
                                        maxLength: 8388608
                                        pattern: "^.+$"
                                    example: ["--port", "8080"]
                                    description: |
                                        Application arguments.
                                env:
                                    type: object
                                    properties:
                                        additionalProperties:
                                            maxProperties: 253
                                            type: string
                                            maxLength: 8388608
                                            pattern: "^.+$"
                                    example: {"port": "8080", "debug": "true"}
                                    description: |
                                        Key/value pairs to be set as environment variables at boot time.
                                        Values must be strings.
                                memory_mb:
                                    type: integer
                                    format: int32
                                    minimum: 16
                                    maximum: 4096
                                    example: 512
                                    description: |
                                        Amount of memory assigned to the instance in megabytes.
                                restart_policy:
                                    type: string
                                    default: "never"
                                    example: "never"
                                    enum: ["always", "on-failure", "never"]
                                    description: |
                                        When an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.
                                        Auto-restarts are performed according to the restart policy configured for a particular instance.
                                        The policy can have the following values:

                                        Policy       | Description
                                        -------------|------------
                                        `always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).
                                        `on-failure` | Only restart the instance if it crashes.
                                        `never`      | Never restart the instance (default).
                                scale_to_zero:
                                    type: object
                                    required:
                                        - policy
                                    description: |
                                        With conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.
                                        Performing a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.
                                        This is not the case with Unikraft Cloud. Instances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.

                                        To enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.
                                        Unikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.
                                        When there is new traffic coming in, it is automatically started again.

                                        If you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful).
                                    properties:
                                        policy:
                                            type: string
                                            example: "off"
                                            enum: ["on", "off", "idle"]
                                            description: |
                                                With the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.

                                                Unikraft Cloud currently supports the following scale-to-zero policies:

                                                Policy | Description
                                                -------|------------
                                                `on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby
                                                `off`  | Scale-to-zero is not enabled. The instance keep on running until manually stopped
                                                `idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does not happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` handler as described [here](https://unikraft.cloud/docs/api/v1/services#handlers))
                                        stateful:
                                            type: boolean
                                            default: false
                                            example: false
                                            description: |
                                                Whether to use [stateful](https://unikraft.cloud/docs/api/v1/instances/#scaletozero_stateful) scale-to-zero.
                                        cooldown_time_ms:
                                            type: integer
                                            format: int32
                                            default: 1000
                                            example: 1000
                                            minimum: 0
                                            maximum: 86400000
                                            description: |
                                                Cooldown time in milliseconds.
                                volumes:
                                    type: array
                                    maxItems: 253
                                    description: |
                                        Description of [volumes](https://unikraft.cloud/docs/api/v1/volumes).
                                    items:
                                        type: object
                                        oneOf:
                                            - required: ["uuid", "at"]
                                            - required: ["name", "at"]
                                        properties:
                                            uuid:
                                                type: string
                                                maxLength: 36
                                                format: uuid
                                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                description: |
                                                    UUID of an existing volume.
                                                    Must be in `available` [state](https://unikraft.cloud/docs/api/v1/volumes#states).
                                            name:
                                                type: string
                                                maxLength: 255
                                                format: basename
                                                example: "my-volume"
                                                description: |
                                                    The name of the volume to attach.

                                                    Note: You need to specify either `uuid`, `name`, or `size_mb`.
                                                    Specifying `size_mb` will create a new [volume](https://unikraft.cloud/docs/api/v1/volumes) and attach it to the instance.
                                                    The volume will receive an auto-generated name.
                                            at:
                                                type: string
                                                maxLength: 8388608
                                                pattern: "^(/[ a-zA-Z0-9._-]*)*$"
                                                example: "/home/user"
                                                description: |
                                                    Path of the mountpoint.
                                                    Must be empty.
                                                    Automatically created if it does not exist.
                                            readonly:
                                                type: boolean
                                                default: false
                                                example: false
                                                description: |
                                                    Whether the volume should be mounted read-only.
                                service_group:
                                    type: object
                                    description: |
                                        Description of published [services](https://unikraft.cloud/docs/api/v1/services).
                                    oneOf:
                                        - required: [uuid]
                                        - required: [name]
                                        - required: [services]
                                    properties:
                                        name:
                                            type: string
                                            maxLength: 255
                                            format: basename
                                            description: |
                                                The name of the service.
                                            example: "my-service"
                                        uuid:
                                            type: string
                                            maxLength: 36
                                            format: uuid
                                            description: |
                                                The UUID of the service.
                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        domains:
                                            type: array
                                            maxItems: 253
                                            items:
                                                type: object
                                                properties:
                                                    fqdn:
                                                        type: string
                                                        maxLength: 255
                                                        format: hostname
                                                        description: |
                                                            Public fully-qualified domain name under which the service is accessible from the Internet.
                                                        example: "my-project.fra0.unikraft.app"
                                                    certificate:
                                                        $ref: "#/components/schemas/certificate"
                                        services:
                                            $ref: "#/components/schemas/service_mapping"
                                autostart:
                                    type: boolean
                                    default: false
                                    example: false
                                    description: |
                                        Autostart behavior.
                                        If `true` the instance will start immediately after creation.
                                replicas:
                                    type: integer
                                    format: int32
                                    default: 0
                                    example: 0
                                    minimum: 0
                                    maximum: 253 # max ops per request
                                    description: |
                                        Number of instance replicas to create with these properties.
                                wait_timeout_ms:
                                    type: integer
                                    format: int32
                                    default: 0
                                    example: 1000
                                    minimum: 0
                                    maximum: 2147483647
                                    description: |
                                        Timeout to wait for all new instances to reach running state in milliseconds.
                                        No wait performed for `0`

                                        Note: Only valid if `autostart` is `true`.
                                        The maximum timeout may vary. Use `-1` for the largest possible value.
                                features:
                                    type: array
                                    maxItems: 253
                                    description: |
                                        Set of features to enable for the instance (see [below](https://unikraft.cloud/docs/api/v1/instances/#features)).
                                    items:
                                        type: string
                                        example: "scale-to-zero"
                                        enum: ["scale-to-zero", "delete-on-stop"]
                                        description: |
                                            The features field accepts the following values:

                                            Feature          | Description
                                            -----------------|------------
                                            `scale-to-zero`  | Enables [scale-to-zero](https://unikraft.cloud/docs/api/v1/instances/#scaletozero) using the default configuration with `policy=on`. This feature string is deprecated and will be removed in future versions. Use the scale_to_zero configuration object instead.
                                            `delete-on-stop` | Makes the instance ephemeral so that it is automatically deleted when it stops.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        $ref: "#/components/schemas/instance"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-instances
            summary: Get the status of one or more instances
            description: |
                Returns the current status and the configuration of a particular instance(s) if a UUID or name is specified.
                Otherwise, returns the current status and configuration of all instances.
            tags:
                - instances
            # TODO(nderjung): Deprecate these query parameters
            # See: https://github.com/unikraft-cloud/platform/issues/120
            parameters:
                - name: details
                  in: query
                  required: false
                  style: form
                  schema:
                    type: boolean
                    default: true
                  example: false
                  description: |
                    Whether to provide detailed status and configuration information.
                - name: metrics
                  in: query
                  required: false
                  style: form
                  schema:
                    type: boolean
                    default: false
                  example: false
                  description: |
                    Whether to include metrics in the detailed status.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to get the status for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to get the status for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                        # TODO(nderjung): Enable these body parameters
                                        # See: https://github.com/unikraft-cloud/platform/issues/120
                                        # details:
                                        #   type: boolean
                                        #   default: true
                                        #   example: false
                                        #   description: |
                                        #     Whether to provide detailed status and configuration information.
                                        # metrics:
                                        #   type: boolean
                                        #   default: false
                                        #   example: true
                                        #   description: |
                                        #     Whether to include metrics in the detailed status.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    $ref: "#/components/schemas/instance"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-instances
            summary: Delete one or more instances
            description: |
                Deletes the specified instance(s).
                After this call the IDs associated with the instance are no longer valid.
                A running instance is force stopped.
                If the instance is an [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale#basics), deleting the instance resets autoscale for the service and deletes all instances created by autoscale.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.

                                                                Note: Not when listing all existing instances.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                                The instance will receive a DNS entry in your private network of the form `<name>.internal`.

                                                                Note: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/{uuid}:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-instance-by-uuid
            summary: Get the status of a single instance
            description: |
                Returns the current status and the configuration of a particular instance if a UUID or name is specified.
                Otherwise, returns the current status and configuration of all instances.
            tags:
                - instances
            parameters:
                - name: details
                  in: query
                  required: false
                  style: form
                  schema:
                    type: boolean
                    default: true
                  example: false
                  description: |
                    Whether to provide detailed status and configuration information.
                - name: metrics
                  in: query
                  required: false
                  style: form
                  schema:
                    type: boolean
                    default: false
                  example: false
                  description: |
                    Whether to include metrics in the detailed status.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/instance"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-instance-by-uuid
            summary: Delete a single instance given its UUID
            description: |
                Deletes the specified instance.
                After this call the IDs associated with the instance are no longer valid.
                A running instance is force stopped.
                If the instance is an [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale#basics), deleting the instance resets autoscale for the service and deletes all instances created by autoscale.
            tags:
                - instances
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.

                                                                Note: Not when listing all existing instances.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                                The instance will receive a DNS entry in your private network of the form `<name>.internal`.

                                                                Note: If no name is specified a random name of the form `<app>-X` is auto-generated, where `<app>` is the application name taken from `image` (e.g., `myapp` for `../myapp:latest`) and `X` is a 5 character long random alphanumeric suffix.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/log:
        get:
            operationId: get-instance-logs
            summary: Retrieve logs for one or more instances
            description: |
                Returns the log output of the specified instance(s) in base64 encoding.
                Note that the maximum response size is capped.
                The log output might thus be cut off and require multiple requests to fetch further output.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to retrieve logs for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to retrieve logs for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                    offset:
                                        type: integer
                                        format: int32
                                        default: -4096
                                        example: -4096
                                        minimum: -2147483647
                                        maximum: 2147483647
                                        description: |
                                            The byte offset of the log output to receive.
                                            A negative sign makes the offset relative to the end of the log.
                                    limit:
                                        type: integer
                                        format: int32
                                        default: 4096
                                        example: 4096
                                        minimum: 0
                                        maximum: 16383
                                        description: |
                                            The amount of bytes to return at most.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            description: |
                                                                The status of the response.
                                                            example: "success"
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the instance.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the instance.
                                                            example: "young-monkey-uq6dxq0u"
                                                        output:
                                                            type: string
                                                            maxLength: 8388608
                                                            format: byte
                                                            description: |
                                                                BASE64 encoded log output.
                                                            example: "SGVsbG8gV29ybGQhCg=="
                                                        available:
                                                            type: object
                                                            description: |
                                                                Description of the log availability.
                                                            properties:
                                                                start:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The first byte offset that can be retrieved.
                                                                    example: 0
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                                end:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The last byte offset that can be retrieved.
                                                                    example: 42
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                        range:
                                                            type: object
                                                            description: |
                                                                Description of the range that was returned. Useful for requests with offset relative to end.
                                                            properties:
                                                                start:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The first retrieved byte.
                                                                    example: 0
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                                end:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The last retrieved byte.
                                                                    example: 42
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/{uuid}/log:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-instance-logs-by-uuid
            summary: Retrieve logs for an instance given its UUID
            description: |
                Returns the log output of the specified instance in base64 encoding.
                Note that the maximum response size is capped.
                The log output might thus be cut off and require multiple requests to fetch further output.
            tags:
                - instances
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            description: |
                                                                The status of the response.
                                                            example: "success"
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the instance.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the instance.
                                                            example: "young-monkey-uq6dxq0u"
                                                        output:
                                                            type: string
                                                            maxLength: 8388608
                                                            format: byte
                                                            description: |
                                                                BASE64 encoded log output.
                                                            example: "SGVsbG8gV29ybGQhCg=="
                                                        available:
                                                            type: object
                                                            description: |
                                                                Description of the log availability.
                                                            properties:
                                                                start:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The first byte offset that can be retrieved.
                                                                    example: 0
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                                end:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The last byte offset that can be retrieved.
                                                                    example: 42
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                        range:
                                                            type: object
                                                            description: |
                                                                Description of the range that was returned. Useful for requests with offset relative to end.
                                                            properties:
                                                                start:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The first retrieved byte.
                                                                    example: 0
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                                                                end:
                                                                    type: integer
                                                                    format: int64
                                                                    description: |
                                                                        The last retrieved byte.
                                                                    example: 42
                                                                    minimum: 0
                                                                    maximum: 9223372036854775807
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/metrics:
        get:
            operationId: get-instance-metrics
            summary: Get metrics for one or more instances
            description: |
                Returns the various instance(s) metrics like CPU time and network traffic statistics.
                Cumulative metrics (e.g., used CPU time) are accumulated over instance starts.
                This endpoint can return either a JSON-encoded response or a response in the Prometheus format.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                required: [uuid]
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to get the metrics for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to get the metrics for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/instance_metrics"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/{uuid}/metrics:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-instance-metrics-by-uuid
            summary: Get metrics for an instance given its UUID
            description: |
                Returns the various instances metrics like CPU time and network traffic statistics.
                Cumulative metrics (e.g., used CPU time) are accumulated over instance starts.
                This endpoint can return either a JSON-encoded response or a response in the Prometheus format.
            tags:
                - instances
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/instance_metrics"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/start:
        put:
            operationId: start-instances
            summary: Start one or more instances
            description: |
                Starts one or more stopped instance(s).
                Does nothing for an instance which is already running.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to start.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to start.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                        state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/{uuid}/start:
        parameters:
            - $ref: "#/components/parameters/uuid"
        put:
            operationId: start-instance-by-uuid
            summary: Start an instance given its UUID
            description: |
                Starts a stopped instance.
                Does nothing for an instance that is already running.
            tags:
                - instances
            parameters:
                - name: wait_timeout_ms
                  in: query
                  required: false
                  style: form
                  explode: false
                  schema:
                    type: integer
                    format: int32
                  description: |
                    Timeout to wait for all specified instances to reach running state in milliseconds.
                    No wait performed for `0`.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                        state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/stop:
        put:
            operationId: stop-instances
            summary: Stop one or more instances
            description: |
                Stops the specified instance(s), but does not destroy it.
                All volatile state (e.g., RAM contents) is lost.
                Does nothing for an instance that is already stopped.
                The instance can be started again with the [`start`](https://unikraft.cloud/docs/api/v1/instances/#start) endpoint.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to get the status for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to get the status for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                    force:
                                        type: boolean
                                        default: false
                                        example: false
                                        description: |
                                            Forces immediate shutdown.
                                    drain_timeout_ms:
                                        type: integer
                                        format: int32
                                        default: 0
                                        example: 0
                                        minimum: 0
                                        maximum: 3600000
                                        description: |
                                            Timeout for draining connections in milliseconds.
                                            The instance does not receive new connections in the draining phase.
                                            The instance is stopped when the last connection has been closed or the timeout expired.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                        state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/{uuid}/stop:
        parameters:
            - $ref: "#/components/parameters/uuid"
        put:
            operationId: stop-instance-by-uuid
            summary: Stop a single instance given its UUID
            description: |
                Stops the specified instance, but does not destroy it.
                All volatile state (e.g., RAM contents) is lost.
                Does nothing for an instance that is already stopped.
                The instance can be started again with the [`start`](https://unikraft.cloud/docs/api/v1/instances/#start) endpoint.
            tags:
                - instances
            parameters:
                - name: force
                  in: query
                  style: form
                  schema:
                    type: boolean
                    default: false
                  example: false
                  description: |
                    Forces immediate shutdown.
                - name: drain_timeout_ms
                  in: query
                  style: form
                  schema:
                    type: integer
                    format: int32
                    default: 0
                    minimum: 0
                    maximum: 3600000
                  example: 0
                  description: |
                    Timeout for draining connections in milliseconds.
                    The instance does not receive new connections in the draining phase.
                    The instance is stopped when the last connection has been closed or the timeout expired.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                        state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                                                        previous_state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            description: |
                                                                An instance can be in one of the following states:

                                                                State     | Description
                                                                ----------|------------
                                                                `stopped` | The instance is not running and does not count against live resource quotas. Connections cannot be established.
                                                                `starting`| The instance is booting up. This usually takes just a few milliseconds.
                                                                `running` | Your application's main entry point has been reached.
                                                                `draining`| The instance is draining connections before shutting down. No new connections can be established.
                                                                `stopping`| The instance is shutting down.
                                                                `standby` | The instance has [scale-to-zero](https://unikraft.cloud/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /instances/wait:
        put:
            operationId: wait-for-instances
            summary: Wait for one or more instances to reach a desired state
            description: |
                Waits until the specified instance(s) have reached the desired state.
                The request blocks until all waits in the call are satisfied or the request timed out.
            tags:
                - instances
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the instance to get the status for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the instance to get the status for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                    state:
                                        type: string
                                        enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                        example: "running"
                                        default: "running"
                                        description: |
                                            State to wait for.
                                    timeout_ms:
                                        type: integer
                                        format: int32
                                        description: |
                                            Timeout for the wait in milliseconds.
                                        default: -1
                                        example: 60000
                                        minimum: -1
                                        maximum: 2147483647
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            instances:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the instance.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "young-monkey-uq6dxq0u"
                                                            description: |
                                                                The name of the instance.
                                                        state:
                                                            type: string
                                                            enum: ["stopped", "starting", "running", "draining", "stopping", "standby"]
                                                            example: "running"
                                                            default: "running"
                                                            description: |
                                                                Current state of the instance.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services:
        post:
            operationId: create-services
            summary: Create a service
            description: |
                Creates a new service with the given configuration.
                Note that the service properties like published ports can only be defined during creation.
                They cannot be changed later.
            tags:
                - services
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - services
                            properties:
                                name:
                                    type: string
                                    maxLength: 255
                                    format: basename
                                    description: |
                                        The name of the service

                                        Note: If no name is specified a random name of the form `<word>-<word>-<random>` is auto-generated, where `<random>` is an 8 characters long random alphanumeric suffix.
                                    example: "my-service"
                                services:
                                    type: array
                                    maxItems: 253
                                    items:
                                        type: object
                                        required:
                                            - port
                                        properties:
                                            port:
                                                type: integer
                                                format: int32
                                                description: Public-facing port
                                                example: 8080
                                                minimum: 1
                                                maximum: 65535
                                            destination_port:
                                                type: integer
                                                format: int32
                                                description: |
                                                    Port that the application listens on.

                                                    Default: Same as `port`
                                                example: 8080
                                                minimum: 1
                                                maximum: 65535
                                            handlers:
                                                type: array
                                                maxItems: 253
                                                description: |
                                                    See [`Connection Handlers`](https://unikraft.cloud/docs/api/v1/services/#handlers).
                                                items:
                                                    $ref: "#/components/schemas/service_mapping"
                                            domains:
                                                type: array
                                                maxItems: 253
                                                description: |
                                                    Description of domains to associate with the service.

                                                    Default: auto-generated.
                                                    Note: If `name` is specified without also providing a domain, a domain is derived from `name` by appending an 8 characters long random alphanumeric suffix and the metro's domain name.
                                                    For example, setting the name to `my-project` without also providing a domain results in an auto-generated domain of `my-project-<random>.fra0.kraft.host`.
                                                items:
                                                    type: object
                                                    required:
                                                        - name
                                                    properties:
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: hostname
                                                            description: |
                                                                Publicly accessible domain name

                                                                Note: The services published by the service will be accessible under the given domain names.
                                                                If `name` is a fully-qualified domain name, that is it ends with a dot (`.`), the domain name is taken as-is.
                                                                Otherwise, the metro’s domain name is appended (e.g., `my-project` expands to `my-project.fra0.kraft.host`).
                                                                If the given domain name is already in use by the current or a different user the operation fails.
                                                                In addition, certain domain names cannot be used (e.g., `www.fra0.kraft.host`).
                                                            example: "my-domain"
                                                        certificate:
                                                            type: object
                                                            description: |
                                                                TLS certificate to use for the domain

                                                                Note: Only allowed for FQDNs, not for subdomains.
                                                                Subdomains like `my-project` inherit the wildcard `*.<metro>.kraft.host` certificate.
                                                                If you specify an FQDN like `www.example.com`, Unikraft Cloud will automatically pick the certificate with the matching CN or trigger a certificate request (see [here](https://unikraft.cloud/docs/api/v1/certificates)).
                                                            properties:
                                                                uuid:
                                                                    type: string
                                                                    maxLength: 36
                                                                    format: uuid
                                                                    description: |
                                                                        The UUID of the certificate.
                                                                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                                name:
                                                                    type: string
                                                                    maxLength: 255
                                                                    format: basename
                                                                    description: |
                                                                        The name of the certificate.
                                                                    example: "my-certificate"
                                                            oneOf:
                                                                - required: ["uuid"]
                                                                - required: ["name"]
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the newly created service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the newly created service.
                                                            example: "young-monkey-uq6dxq0u"
                                                        soft_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            default: 1
                                                            example: 100
                                                            minimum: 1
                                                            maximum: 65535
                                                        hard_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            default: 65535
                                                            example: 1000
                                                            minimum: 1
                                                            maximum: 65535
                                                        domains:
                                                            type: array
                                                            maxItems: 253
                                                            items:
                                                                type: object
                                                                properties:
                                                                    fqdn:
                                                                        type: string
                                                                        maxLength: 255
                                                                        format: hostname
                                                                        description: |
                                                                            Public fully-qualified domain name under which the service is accessible from the Internet.
                                                                        example: "my-project.fra0.kraft.host"
                                                                    certificate:
                                                                        type: object
                                                                        description: |
                                                                            TLS certificate used for the domain.

                                                                            Note: Not for subdomains of `<metro>.kraft.host`.
                                                                        properties:
                                                                            uuid:
                                                                                type: string
                                                                                format: uuid
                                                                                maxLength: 36
                                                                                example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                                                description: |
                                                                                    The UUID of the certificate.
                                                                            name:
                                                                                type: string
                                                                                format: basename
                                                                                maxLength: 255
                                                                                example: "my-certificate"
                                                                                description: |
                                                                                    The name of the certificate.
                                                                            state:
                                                                                type: string
                                                                                enum: ["valid", "pending", "error"]
                                                                                example: "valid"
                                                                                description: |
                                                                                    Current state of the certificate.

                                                                                    A certificate can be in one of the following states:

                                                                                    State     | Description
                                                                                    ----------|------------
                                                                                    `pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal.
                                                                                    `valid`   | The certificate is valid and can be used for services.
                                                                                    `error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let’s Encrypt™ quota limits, or the domain validation process failed for some other reason. There won’t be any further automatic attempts. If you need assistence please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud).
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-services
            summary: Get the status of one or more services
            description: |
                Returns the current status and the configuration of a particular service if a UUID or name is specified.
                Otherwise, returns the current status and configuration of all services.
            tags:
                - services
            # TODO(nderjung): Deprecate these query parameters
            # See: https://github.com/unikraft-cloud/platform/issues/120
            parameters:
                - name: details
                  in: query
                  required: false
                  schema:
                    type: boolean
                    default: true
                  example: true
                  description: |
                    Whether to provide detailed status and configuration information.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the service to get the status for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the service to get the status for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                        # TODO(nderjung): Enable these body parameters
                                        # See: https://github.com/unikraft-cloud/platform/issues/120
                                        # details:
                                        #   type: boolean
                                        #   default: true
                                        #   example: false
                                        #   description: |
                                        #     Whether to provide detailed status and configuration information.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                                                        created_at:
                                                            type: string
                                                            maxLength: 8388608
                                                            format: date-time
                                                            description: |
                                                                Date and time of creation in ISO8601.
                                                            example: "2021-01-01T00:00:00Z"
                                                        persistent:
                                                            type: boolean
                                                            description: |
                                                                Indicates if the service will stay alive even after the last instance detached.
                                                            example: true
                                                        autoscale:
                                                            type: boolean
                                                            description: |
                                                                Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.
                                                            example: true
                                                        soft_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            example: 1
                                                            minimum: 1
                                                            maximum: 65535
                                                        hard_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            example: 65535
                                                            minimum: 1
                                                            maximum: 65535
                                                        services:
                                                            type: array
                                                            maxItems: 253
                                                            description: |
                                                                Description of published network services.
                                                            items:
                                                                $ref: "#/components/schemas/service_mapping"
                                                        domains:
                                                            type: array
                                                            maxItems: 253
                                                            items:
                                                                type: object
                                                                properties:
                                                                    fqdn:
                                                                        type: string
                                                                        maxLength: 255
                                                                        format: hostname
                                                                        description: |
                                                                            Public fully-qualified domain name under which the service is accessible from the Internet.
                                                                        example: "my-project.fra0.unikraft.app"
                                                                    certificate:
                                                                        $ref: "#/components/schemas/certificate"
                                                        instances:
                                                            type: array
                                                            maxItems: 253
                                                            description: Instances attached to this service
                                                            items:
                                                                type: object
                                                                properties:
                                                                    uuid:
                                                                        type: string
                                                                        maxLength: 36
                                                                        format: uuid
                                                                        description: |
                                                                            The UUID of the instance.
                                                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                                    name:
                                                                        type: string
                                                                        maxLength: 255
                                                                        format: basename
                                                                        description: |
                                                                            The name of the instance.
                                                                        example: "my-instance"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-services
            summary: Delete one or more services
            description: |
                Deletes the specified service(s).
                Fails if there are still instances attached to the service.
                After this call the IDs associated with the service are no longer valid and the domain name is released.
            tags:
                - services
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the service to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the service to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services/{uuid}:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-service-by-uuid
            summary: Get the status of a service given its UUID
            description: |
                Returns the current status and the configuration of a particular service if a UUID or name is specified.
                Otherwise, returns the current status and configuration of all services.
            tags:
                - services
            parameters:
                - name: details
                  in: query
                  required: false
                  schema:
                    type: boolean
                    default: true
                  description: |
                    Whether to provide detailed status and configuration information.
                  example: true
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                                                        created_at:
                                                            type: string
                                                            maxLength: 8388608
                                                            format: date-time
                                                            description: |
                                                                Date and time of creation in ISO8601.
                                                            example: "2021-01-01T00:00:00Z"
                                                        persistent:
                                                            type: boolean
                                                            description: |
                                                                Indicates if the service will stay alive even after the last instance detached.
                                                            example: true
                                                        autoscale:
                                                            type: boolean
                                                            description: |
                                                                Indicates if the service has [autoscale](https://unikraft.cloud/docs/api/v1/autoscale) enabled.
                                                            example: true
                                                        soft_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [soft limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            example: 1
                                                            minimum: 1
                                                            maximum: 65535
                                                        hard_limit:
                                                            type: integer
                                                            format: int32
                                                            description: |
                                                                Per-instance connection [hard limit](https://unikraft.cloud/docs/api/v1/services/#limits).
                                                            example: 65535
                                                            minimum: 1
                                                            maximum: 65535
                                                        services:
                                                            type: array
                                                            maxItems: 253
                                                            description: |
                                                                Description of published network services.
                                                            items:
                                                                $ref: "#/components/schemas/service_mapping"
                                                        domains:
                                                            type: array
                                                            maxItems: 253
                                                            items:
                                                                type: object
                                                                properties:
                                                                    fqdn:
                                                                        type: string
                                                                        maxLength: 255
                                                                        format: hostname
                                                                        description: |
                                                                            Public fully-qualified domain name under which the service is accessible from the Internet.
                                                                        example: "my-project.fra0.unikraft.app"
                                                                    certificate:
                                                                        $ref: "#/components/schemas/certificate"
                                                        instances:
                                                            type: array
                                                            maxItems: 253
                                                            description: Instances attached to this service
                                                            items:
                                                                type: object
                                                                properties:
                                                                    uuid:
                                                                        type: string
                                                                        maxLength: 36
                                                                        format: uuid
                                                                        description: |
                                                                            The UUID of the instance.
                                                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                                    name:
                                                                        type: string
                                                                        maxLength: 255
                                                                        format: basename
                                                                        description: |
                                                                            The name of the instance.
                                                                        example: "my-instance"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-service-by-uuid
            summary: Delete a service given its UUID
            description: |
                Deletes the specified service.
                Fails if there are still instances attached to the service.
                After this call the IDs associated with the service are no longer valid and the domain name is released.
            tags:
                - services
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services/autoscale:
        post:
            operationId: create-autoscale-config
            summary: Create autoscale configuration
            description: |
                Creates an autoscale configuration for the specified service.
            tags:
                - autoscale
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            properties:
                                uuid:
                                    type: string
                                    maxLength: 36
                                    format: uuid
                                    example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                    description: |
                                        The UUID of the service for which to create a configuration.

                                        Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                name:
                                    type: string
                                    maxLength: 255
                                    format: hostname
                                    example: "my-service"
                                    description: |
                                        The name of the service for which to create a configuration.

                                        Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                min_size:
                                    type: integer
                                    format: int32
                                    default: 1
                                    example: 1
                                    minimum: 1
                                    maximum: 1
                                    description: |
                                        Minimum number of instances.
                                max_size:
                                    type: integer
                                    format: int32
                                    default: 4
                                    example: 4
                                    minimum: 1
                                    maximum: 2147483647
                                    description: |
                                        Maximum number of instances.
                                warmup_time_ms:
                                    type: integer
                                    format: int32
                                    default: 1000
                                    example: 1000
                                    minimum: 1
                                    maximum: 2147483647
                                    description: |
                                        Length of [warmup phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.
                                cooldown_time_ms:
                                    type: integer
                                    format: int32
                                    default: 1000
                                    example: 1000
                                    minimum: 1
                                    maximum: 2147483647
                                    description: |
                                        Length of [cooldown phase](https://unikraft.cloud/docs/api/v1/autoscale/#warmup-and-cooldown) in milliseconds.
                                master:
                                    type: object
                                    properties:
                                        uuid:
                                            type: string
                                            maxLength: 36
                                            format: uuid
                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                            description: |
                                                The UUID of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).
                                        name:
                                            type: string
                                            maxLength: 255
                                            format: basename
                                            description: |
                                                The name of instance to use as [autoscale master](https://unikraft.cloud/docs/api/v1/autoscale/#autoscale-basics).
                                            example: "my-instance"
                                        policies:
                                            type: array
                                            maxItems: 253
                                            items:
                                                $ref: "#/components/schemas/autoscale_policy"
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the certificate.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "my-certificate"
                                                            description: |
                                                                The name of the certificate.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-autoscale-configs
            summary: Get one or more autoscale configuration
            description: |
                Returns the current autoscale configuration of the supplied service(s).
            tags:
                - autoscale
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the service.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the service.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            `success` on success, `failure` if the request failed.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/autoscale_config"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-autoscale-configs
            summary: Delete one or more autoscale configurations
            description: |
                Deletes the autoscale configuration for the specified service.
                Unikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards.
                The draining phase is allowed to take at most `cooldown_time_ms` milliseconds after which remaining connections are forcefully closed.
                The master instance is never deleted.
                However, deleting the autoscale configuration causes the master instance to start if it is stopped.
            tags:
                - autoscale
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the service.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "young-monkey-uq6dxq0u"
                                        description: |
                                            The name of the service.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            maxLength: 8388608
                                                            description: |
                                                                The status of the response.
                                                            enum: ["success", "failure"]
                                                            example: "success"
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services/{uuid}/autoscale:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-autoscale-config-by-service-uuid
            summary: Get an autoscale configuration given the service UUID
            description: |
                Returns the current autoscale configuration of a service.
            tags:
                - autoscale
            responses:
                '200':
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            `success` on success, `failure` if the request failed.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/autoscale_config"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-autoscale-config-by-uuid
            summary: Delete an autoscale configuration given its UUID
            description: |
                Deletes the autoscale configuration for the specified service.
                Unikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards.
                The draining phase is allowed to take at most `cooldown_time_ms` milliseconds after which remaining connections are forcefully closed.
                The master instance is never deleted.
                However, deleting the autoscale configuration causes the master instance to start if it is stopped.
            tags:
                - autoscale
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            service_groups:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            maxLength: 8388608
                                                            description: |
                                                                The status of the response.
                                                            enum: ["success", "failure"]
                                                            example: "success"
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the service.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the service.
                                                            example: "my-service"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services/{uuid}/autoscale/policies:
        parameters:
            - $ref: "#/components/parameters/uuid"
        post:
            operationId: create-autoscale-policy
            summary: Create an autoscale policy
            description: |
                Adds a new autoscale policy to the existing autoscale configuration of the specified service.
            tags:
                - autoscale
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    maxLength: 255
                                    format: basename
                                    description: |
                                        The name of the policy.
                                    example: "my-policy"
                                type:
                                    type: string
                                    enum: ["step"]
                                    example: "step"
                                    description: |
                                        Type of autoscale policy.
                                metric:
                                    type: string
                                    default: "cpu"
                                    enum: ["cpu"]
                                    example: "cpu"
                                    description: |
                                        Metric to monitor.
                                adjustment_type:
                                    type: string
                                    default: "change"
                                    enum: ["change", "exact", "percent"]
                                    example: "change"
                                    description: |
                                        Type of adjustment.
                                steps:
                                    $ref: "#/components/schemas/autoscale_policy_step"
                            oneOf:
                                - required: [name, type, steps]
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            certificates:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                            description: |
                                                                The UUID of the service.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "my-service"
                                                            description: |
                                                                The name of the service.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-autosacle-policies
            summary: Get one or more autoscale policies
            description: |
                Returns the configuration of the specified autoscale policy.
            tags:
                - autoscale
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the autoscale policy to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "scale-out-policy"
                                        description: |
                                            The name of the autoscale policy to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            policies:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/autoscale_policy"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-autoscale-policies
            summary: Delete one or more autoscale policies
            description: |
                Deletes the specified autoscale policies.
            tags:
                - autoscale
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the autoscale policy to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "scale-out-policy"
                                        description: |
                                            The name of the autoscale policy to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            policies:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "failure"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "scale-out-policy"
                                                            description: |
                                                                The name of the policy.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /services/{uuid}/autoscale/policies/{name}:
        parameters:
            - $ref: "#/components/parameters/uuid"
            - $ref: "#/components/parameters/name"
        get:
            operationId: get-autoscale-policy-by-service-uuid-and-policy-name
            summary: Get a single autoscale policy
            description: |
                Returns the configuration of the specified autoscale policy.
            tags:
                - autoscale
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            policies:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    $ref: "#/components/schemas/autoscale_policy"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-autoscale-policy-by-service-uuid-and-policy-name
            summary: Delete an autoscale policy given its service uuid and policy name
            description: |
                Deletes the specified autoscale policy.
            tags:
                - autoscale
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    data:
                                        type: object
                                        properties:
                                            policies:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "failure"]
                                                            example: "success"
                                                            description: |
                                                                The status of the response.
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            example: "scale-out-policy"
                                                            description: |
                                                                The name of the policy.
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /users/quotas:
        get:
            operationId: get-quotas
            summary: Get quota information for one or more users
            description: |
                Lists quota usage and limits of the specified user account.
                Limits are hard limits that cannot be exceeded.
            tags:
                - users
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            quotas:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/user_quota"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /users/{uuid}/quotas:
        parameters:
            - $ref: "#/components/parameters/uuid"
        get:
            operationId: get-quota-by-uuid
            summary: Get quota information given their UUID
            description: |
                Lists quota usage and limits for the provided UUID.
                Limits are hard limits that cannot be exceeded.
            tags:
                - users
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            quotas:
                                                type: array
                                                maxItems: 1
                                                items:
                                                    $ref: "#/components/schemas/user_quota"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
    /volumes:
        post:
            operationId: create-volumes
            summary: Create one or more persistent volumes
            description: |
                Creates one or more volumes with the given configuration.
                The volumes are automatically initialized with an empty file system.
                After initialization the volumes are in the `available` state and can be attached to an instance with the [`PUT /v1/volumes/attach`](https://unikraft.cloud/docs/api/v1/volumes/#attach) endpoint.
                Note that, the size of a volume cannot be changed after creation.
            tags:
                - volumes
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                required: [size_mb]
                                properties:
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        description: |
                                            The name of the volume.

                                            Note: If no name is specified a random name of the form `vol-X` is auto-generated, where `X` is a 5 character long random alphanumeric suffix.
                                    size_mb:
                                        type: integer
                                        format: int32
                                        example: 1024
                                        minimum: 1
                                        maximum: 1048576
                                        description: |
                                            Size of the volume in megabytes.
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            volumes:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    type: object
                                                    properties:
                                                        status:
                                                            type: string
                                                            enum: ["success", "error"]
                                                            example: "success"
                                                        uuid:
                                                            type: string
                                                            maxLength: 36
                                                            format: uuid
                                                            description: |
                                                                The UUID of the volume.
                                                            example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                                        name:
                                                            type: string
                                                            maxLength: 255
                                                            format: basename
                                                            description: |
                                                                The name of the volume.
                                                            example: "my-volume"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        get:
            operationId: get-volumes
            summary: Get the status of one or more persistent volumes
            description: |
                Returns the current status and the configuration of a particular volume if a UUID or name is specified.
                Otherwise, returns the current status and configuration of all volumes.
            tags:
                - volumes
            # TODO(nderjung): Deprecate these query parameters
            # See: https://github.com/unikraft-cloud/platform/issues/120
            parameters:
                - name: details
                  in: query
                  required: false
                  schema:
                    type: boolean
                    default: true
                  description: |
                    Whether to provide detailed status and configuration information.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the volume to get the status for.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "my-data"
                                        description: |
                                            The name of the volume to get the status for.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
                                        # TODO(nderjung): Enable these body parameters
                                        # See: https://github.com/unikraft-cloud/platform/issues/120
                                        # details:
                                        #   type: boolean
                                        #   default: true
                                        #   example: false
                                        #   description: |
                                        #     Whether to provide detailed status and configuration information.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                    data:
                                        type: object
                                        properties:
                                            volumes:
                                                type: array
                                                maxItems: 253
                                                items:
                                                    $ref: "#/components/schemas/volume"
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
        delete:
            operationId: delete-volumes
            summary: Delete one or more persistent volumes
            description: |
                Deletes the specified volume(s).
                Fails if the volume is still attached to an instance.
                After this call the IDs associated with the volume are no longer valid.
            tags:
                - volumes
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    uuid:
                                        type: string
                                        maxLength: 36
                                        format: uuid
                                        example: "471a2a73-36db-4df9-bb63-82a45810e88a"
                                        description: |
                                            The UUID of the volume to delete.

                                            Note: This property is mutually exclusive with `name` and either `uuid` or `name` are required.
                                    name:
                                        type: string
                                        maxLength: 255
                                        format: basename
                                        example: "my-volume"
                                        description: |
                                            The name of the volume to delete.

                                            Note: This property is mutually exclusive with `uuid` and either `uuid` or `name` are required.
            responses:
                '200':
                    description: |
                        Successful response.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                default:
                    description: |
                        Error response.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: |
                                    An error response from the Unikraft Cloud Platform API
                                required:
                                    - status
                                    - errors
                                properties:
                                    status:
                                        type: string
                                        enum: ["success", "failure"]
                                        description: |
                                            The status of the response.
                                        example: "success"
                                    errors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                status:
                                                    type: integer
                                                    format: int32
                                                    example: 400
                                                    description: |
                                                        HTTP status code
                                    data:
                                        type: object
security:
    - bearerAuth: []
tags:
    - name: autoscale
      description: |
        :::caution[Limited Access]
        Please note that autoscale is currently available for selected accounts only.
        If you wish to explore autoscale for your services, please contact us via support@unikraft.cloud.
        :::

        Services allow you to load balance traffic for an Internet-facing service like a webserver by creating multiple instances within the same service.
        While you can add or remove instances to a service to scale your service, doing this manually makes it hard to react to changes in service load.
        On the other hand, always keeping a large number of instances running to cope with bursts is not an option either.
        This is where autoscale comes into play.
        With autoscale enabled, Unikraft Cloud takes the heavy lifting of constantly monitoring
        the load of your service and automatically creates or deletes instances as needed.

        To enable autoscale a typical workflow looks like this:

        1) Create a new service with the desired properties (e.g., published ports, DNS name).
        2) Create a new instance of your application and assign it to the service.
        This instance is going to be the **autoscale master** and cloned by Unikraft Cloud to scale your service.
        3) Create an autoscale configuration for the service and set the instance as master.
        The configuration allows you to define the metrics and policies based on which Unikraft Cloud performs autoscale.
        It also specifies the desired minimum and maximum number of instances as well as warmup and cooldown periods.


        :::note
        Autoscale as well as load balancing in general is currently only available for Internet-facing services
        :::

        ### Warmup and Cooldown <a name="warmupcooldown"></a>

        When Unikraft Cloud decides to scale out your service it grants new instances a grace period in which they have time to complete boot, warm up caches and start having an effect on the load level.
        Only after this **warmup phase**, new instances are contributing to the evaluation of the autoscale metric.
        This is to let the effects of the new instances on the service stabilize and prevent extensive scale out.
        Note that new instances already receive traffic and serve load while they are still warming up.

        Conversely, Unikraft Cloud uses a **cooldown phase** to control scale in.
        During this phase, instances selected for scale in are given a chance to drain existing connections while already being excluded from the number of active instances in the service.
        New connections or HTTP requests on existing connections<sup>1</sup> are assigned to different instances.
        If there are still open connections after the cooldown phase, the remaining connections are forcefully closed.

        <br/>
        <small>
        <sup>1</sup>Only if the [http connection handler](/docs/api/v1/services#handlers) has been set.<br/>
        </small>

        ### Autoscale Policies <a name="policies"></a>

        With autoscale policies you define under which circumstances Unikraft Cloud should scale your service and what metric (e.g., CPU utilization) should be used for the decision.

        Unikraft Cloud currently supports the following autoscale policies:

        | Policy | Description |
        --|--
        [Step](#step) | Defines concrete adjustments for selected value ranges in the metric

        An autoscale configuration usually comprises multiple policies, for example, to control scale in and scale out in separate policies.
        When Unikraft Cloud performs autoscale decisions it always evaluates all policies and does not stop at the first applicable policy.
        If none of the policies apply, Unikraft Cloud maintains the current number of instances.

        :::note
        You can define up to 8 autoscale policies per service.
        :::

        #### Step Policy <a name="step"></a>

        A step policy consists of a set of steps that define
        * a lower bound,
        * an upper bound,
        * and an adjustment.

        The lower and upper bounds are always in the dimension of the selected metric.
        A bound can be set to `null` (or not provided at all) to make the step unbounded in the respective direction.
        The interpretation of the adjustment depends on the how the step policy is configured.
        Positive values increase the number of instances, negative values decrease the number of instances.

        Adjustment type | Description
        --|--
        `change` | Relative change in the number of instances (e.g., +2 instances)
        `exact` | Absolute target number of instances in the service (e.g., 10 instances)
        `percent` | Change by percentage of the current number of instances in the service (e.g., +50%)

        An example step policy for scaling out may look like this:
        ```json frame=none
        {
          "name": "scale-out-policy",
          "type": "step",
          "metric": "cpu",
          "adjustment_type": "percent",
          "steps": [
            { "lower_bound": 500, "upper_bound": 700,  "adjustment": 50  },
            { "lower_bound": 700, "upper_bound": null, "adjustment": 100 }
          ]
        }
        ```
        If the CPU utilization per instance is below 500 millicores, no scaling action happens.
        If the CPU utilization is between 500 and 700 millicores, the policy instructs Unikraft Cloud to increase the number of instances by 50%.
        If the CPU utilization exceeds 700 millicores, the number of instances is doubled.
        Thus, if the per-instance CPU load is at 600 millicores (i.e., 60%) and the current number of instances in the service is 4, Unikraft Cloud will create 2 additional instances.

        There are a set of rules that steps of the same policy must adhere to:

        * The lower bound must be smaller than the upper bound
        * The lower and upper bound cannot be `null` in the same step
        * Steps must not overlap
        * Steps must be sorted in ascending order
        * There must be no gaps between individual steps

        :::note
        Each step policy can define up to 4 steps. Use more than one policy if you need more steps.
        :::

        ### Autoscale Metrics <a name="metrics"></a>

        You can base autoscale decisions on different metrics.
        Currently, Unikraft Cloud supports the following metrics:

        Metric | Description
        --|--
        `cpu` | Per-instance CPU utilization measured in millicores (e.g., 100 millicores corresponds to 10% CPU utilization)
    - name: certificates
      description: |
        Unikraft Cloud allows you to host your deployment at subdomains of `<metro>.kraft.host` and/or use custom domains (e.g., `example.com`).

        For subdomains, your deployment will use the wildcard TLS certificate of the respective Unikraft Cloud metro.

        For custom domains, you need a TLS certificate specifically generated for your domain.
        Unikraft Cloud automatically configures the correct TLS certificate for you for non-wildcard domains.
        To specify a custom domain, provide the fully-qualified domain name in [`POST /v1/instances`](/docs/api/v1/instances#create) or [`POST /v1/services`](/docs/api/v1/services#create).
        Unikraft Cloud will check if any of your existing certificates applies to the domain, and if not request one using Let's Encrypt™.

        For wildcard domains you have to supply your own certificate.
        If you want to use Let's Encrypt™ you can use their DNS-based challenge and upload the resulting certificate to Unikraft Cloud.

        ### Certificate States <a id="states"></a>

        A certificate can be in one of the following states:

        State     | Description
        ----------|---
        `pending` | The certificate request is pending while the certificate is being requested from the certification authority. During this phase any service using this certificate is not available if this is not a renewal
        `valid`   | The certificate is valid and can be used by your services
        `error`   | The certificate request failed after multiple attempts. This can happen, for example, if your DNS configuration is not correct, you run into Let's Encrypt™ quota limits, or the domain validation process failed for some other reason. There won't be any further automatic attempts. If you need assistence please contact us via support@unikraft.cloud.

        These are reported as certificate `state` by the endpoints.
    - name: images
      description: |
        On Unikraft Cloud, an image is comprised of your application files and binaries, as well as a highly specialized and performant unikernel or Linux kernel.
        We store these together as an OCI image and distribute them worldwide using low-latency metro interconnects.

        As images deployed to Unikraft Cloud are lightweight; transport is fast, and distributing new and updated production-ready applications takes only milliseconds to propagate (caveat: clearly if the application itself is large, the overall image will be large as well).

        ### Image Name Reference

        We follow the [OCI Distribution Specification](https://github.com/opencontainers/image-spec/blob/main/spec.md) for naming and referencing images.
        When referencing an image you can either reference it by its tag:

        ```
        <USER>/<APP>:<TAG>
        ```

        or by its SHA256 checksum:

        ```
        <USER>/<APP>@sha256:<CHECKSUM>
        ```

        Where `<USER>` is the name of your user account, `<APP>` is the name of the application you want to start, `<TAG>` specifies a label applied to this application (e.g., `latest`), and `<CHECKSUM>` represents the digest of a specific version of the image.

        Since the latest version of an application may change when an update is pushed, Unikraft Cloud computes a SHA256-based digest of the image to uniquely identify it.
        Whenever you create a new instance from an image, Unikraft Cloud translates the tag to the image's digest and pins the instance to this particular version.
        That is why [GET /v1/instances](/docs/api/v1/instances#status) reports a digest instead of the tag originally used to create the instance.

        Applications under the namespace of your user account can only be accessed by your user and are private to you.
        In addition to private images, there are official images published by Unikraft Cloud which are accessible by just their name:
        ```
        <APP>:<TAG>
        ```
    - name: instances
      description: |
        An *instance* is a Unikraft virtual machine running a single instance of your application.

        ### Instance States <a id="states"></a>

        An instance can be in one of the following states:

        State      | Description
        -----------|---
        `stopped`  | The instance is not running and does not count against live resource quotas. Connections cannot be established.
        `starting` | The instance is booting up. This usually takes just a few milliseconds.
        `running`  | Your application's main entry point has been reached.
        `draining` | The instance is draining connections before shutting down. No new connections can be established.
        `stopping` | The instance is shutting down.
        `standby`  | The instance has [scale-to-zero](/docs/api/v1/autoscale#scaletozero) enabled. The instance is not running, but will be automatically started when there are incoming requests.

        These are reported as instance `state` by the endpoints.

        ### Stop Reason <a id="stopreason"></a>

        To understand why an instance has been stopped or is in the process of shutting down, Unikraft Cloud provides information about the stop reason.
        You can retrieve this information via the [`GET /v1/instances`](#status) endpoint when an instance is in the `draining`, `stopping`, `stopped` or `standby` state.

        The `stop_reason` contains a bitmask that tells you the origin of the shutdown:

        Bit   | 4 [F] | 3 [U] | 2 [P] | 1 [A] | 0 [K] (LSB)
        ------|-------|-------|-------|-------|------------
        Desc. | This was a force stop<sup>1</sup> | Stop initiated by user<sup>1</sup> | Stop initiated by platform | App exited - `exit_code` available | Kernel exited - `stop_code` available

        <small>
        <sup>1</sup>A forced stop does not give the instance a chance to perform a clean shutdown. Bits 0 [K] and 1 [A] can thus never be set for forced shutdowns. Consequently, there won't be an `exit_code` or `stop_code`.<br/>
        <sup>2</sup>A stop command originating from the user is travelling through the platform controller. This is why bit 2 [P] will also always be set for user-initiated stops.<br/>
        </small>

        For example, the `stop_reason` will contain the following values in the given scenarios:

        Value | Bitmask         | Scenario
        ------|-----------------|---
        `28`  | `11100`/`FUP--` | Forced user-initiated shutdown.
        `15`  | `01111`/`-UPAK` | Regular user-initiated shutdown. The application and kernel have exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.
        `13`  | `01101`/`-UP-K` | The user initiated a shutdown but the application was forcefully killed by the kernel during shutdown. This can be the case if the image does not support a clean application exit or the application crashed after receiving a termination signal. The `exit_code` won't be present in this scenario.
        `7`   | `00111`/`--PAK` | Unikraft Cloud initiated the shutdown, for example, due to [scale-to-zero](/docs/api/v1/autoscale#scaletozero). The application and kernel have exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.
        `3`   | `00011`/`---AK` | The application exited. The `exit_code` and `stop_code` indicate if the application and kernel shut down cleanly.
        `1`   | `00001`/`----K` | The instance likely expierenced a fatal crash and the `stop_code` contains more information about the cause of the crash.
        `0`   | `00000`/`-----` | The stop reason is unknown.

        :::note
        There can be a short delay of a few milliseconds between the instance reaching the `stopped` state and the `stop_reason` being updated (or vice versa).
        :::

        #### Exit Code

        The application exit code is what the application returns upon leaving its main entry point.
        The encoding of the `exit_code` is application specific.
        See the documentation of the application for more details.
        Usually, an `exit_code` of `0` indicates success / no failure.

        #### Stop Code

        The `stop_code` is defined by the kernel and has the following encoding irrespective of the application.

        Bits | 31 - 24 (8 bits)     | 23 - 16 (8 bits) | 15 [T]         | 14 - 8 (7 bits) | 7 - 0 (8 bits)
        -----|----------------------|------------------|----------------|-----------------|---
        Desc.| reserved<sup>1</sup> | `errno`          | `shutdown_bit` |`initlvl`        | `reason`

        <small>
        <sup>1</sup>Reserved bits are set to 0. Ignore.
        </small>

        **Reason**
        `reason` can be any of the following values:
        Value | Symbol     | Scenario
        ------|------------|---
        `0`   | `OK`       | Successful shutdown
        `1`   | `EXP`      | The system detected an invalid state and actively stopped execution to prevent data corruption
        `2`   | `MATH`     | An arithmetic CPU error (e.g., division by zero)
        `3`   | `INVLOP`   | Invalid CPU instruction or instruction error (e.g., wrong operand alignment)
        `4`   | `PGFAULT`  | Page fault - see `errno` for further details
        `5`   | `SEGFAULT` | Segmentation fault
        `6`   | `HWERR`    | Hardware error
        `7`   | `SECERR`   | Security violation (e.g., violation of memory access protections)

        A `reason` of `0` indicates that the instance was shut down cleanly.
        To detect if the system experienced a crash, all other bits of `stop_code` can be ignored.

        **Init Level**
        `initlvl` indicates during which initialization or shutdown phase the instance stopped. A level of `127` indicates that the instance was executing the application when it stopped.

        **Shutdown Bit**
        `shutdown_bit` is set when the stop occurred while the system was shutting down.

        **Error Number**
        `errno` is a [Linux error code number](https://www.man7.org/linux/man-pages/man3/errno.3.html) that provides more detailed information about the root cause.

        :::note
        For example, an out-of-memory (OOM) situation usually results in a page fault `PGFAULT(4)` with `errno` being `ENOMEM(12)`. Hence, the `stop_code` would be `0x000C7F04=818948` and the `stop_reason` would be `----K(1)` if the stopped occurred during application execution.
        :::

        ### Restart Policy <a id="restart"></a>

        When an instance stops either because the application exits or the instance crashes, Unikraft Cloud can auto-restart your instance.
        Auto-restarts are performed according to the restart policy configured for a particular instance.
        The policy can have the following values:

        Policy       | Description
        -------------|---
        `never`      | Never restart the instance (default).
        `always`     | Always restart the instance when the stop is initiated from within the instance (i.e., the application exits or the instance crashes).
        `on-failure` | Only restart the instance if it crashes.

        When an instance stops, the stop reason and the configured restart policy are evaluated to decide if a restart should be performed.
        Unikraft Cloud uses an exponential back-off delay (immediate, 5s, 10s, 20s, 40s, ..., 5m) to slow down restarts in tight crash loops.
        If an instance runs without problems for 10s the back-off delay is reset and the restart sequence ends.

        The `restart.attempt` reported in [`GET /v1/instances`](#status) counts the number of restarts performed in the current sequence.
        The `restart.next_at` field indicates when the next restart will take place if a back-off delay is in effect.

        A manual start or stop of the instance aborts the restart sequence and resets the back-off delay.

        ### Scale-To-Zero <a name="scaletozero"></a>

        With conventional cloud platforms you need to keep at least one instance running at all times to be able to respond to incoming requests.
        Performing a just-in-time cold boot is simply too time-consuming and would create a response latency of multiple seconds.
        This is not the case with Unikraft Cloud.
        Instances on Unikraft Cloud are able to cold boot within milliseconds, which allows us to perform low-latency scale-to-zero.

        To enable scale-to-zero for an instance it is sufficient to add a `scale_to_zero` configuration block.
        Unikraft Cloud will then put the instance into standby if there is no traffic to your service within the window of a cooldown period.
        When there is new traffic coming in, it is automatically started again.

        If you have a heavyweight application that takes long to cold boot or has bad first request latency (e.g., with JIT compilation) consider to enable [stateful scale-to-zero](#scaletozero_stateful).

        #### Policy <a name="scaletozero_policy"></a>

        With the scale-to-zero policy you define under which circumstances Unikraft Cloud should put your instance into standby.

        Unikraft Cloud currently supports the following scale-to-zero policies:

        Policy | Description
        -------|---
        `off`  | Scale-to-zero is not enabled. The instance keeps on running until manually stopped
        `on`   | Scale-to-zero is enabled. When there are no TCP connections or HTTP requests for the duration of the cooldown time, the instance is put into standby
        `idle` | Same as `on`, but also puts the instance into standby when there are TCP connections established that have been inactive for the duration of the cooldown time. The connections remain established and incoming packets wake up the instance. Scale-to-zero does **not** happen while there are active HTTP requests (i.e., traffic on ports, which have been marked with the `http` [handler](/docs/api/v1/services#handlers))

        :::note
        Unikraft Cloud only considers network traffic that is going through its proxy to control scale-to-zero.
        Connections that your application actively establishes to servers on the Internet **and** within Unikraft Cloud bypass the proxy for maximum performance.
        The instance will thus be put into standby irrespective of the presence of and data sent over such connections.<br/><br/>

        See how you can make Unikraft Cloud cooperate with your application in these scenarios in the [next section](#scaletozero_app).
        :::

        #### Application Support for Scale-To-Zero <a name="scaletozero_app"></a>

        Scale-to-zero can be used without any support from your application.
        However, there are cases where making your application aware of scale-to-zero makes sense.

        **Background Jobs** For example, you want to run background jobs after your application has responded to a request (e.g., send trace information to a logging server).
        In this case, you may want to temporarily disable scale-to-zero to make sure your instance is not put to sleep while still performing work.

        **Long Request Processing** The same is true if you application can have long request processing times.
        Consider a setup where you use the `idle` policy with plain TCP connections and configure a cooldown time of 10s.
        If it takes your application 15s to process a request until the first response data is sent, Unikraft Cloud will prematurely scale your instance to zero<sup>1</sup>.

        While configuring a longer cooldown time can be a simple solution in some cases, this is not possible if the maximum duration of background jobs or request processing phases is unknown.
        It also means that you have to compromise between cost efficiency and reliability of your service.

        Unikraft Cloud allows your application to temporarily disable scale-to-zero so you can have both a short cooldown phase and reliable operation no matter how long things may take. To control scale-to-zero from within your application, instances on Unikraft Cloud provide a special file-based interface:

        File                               | Description
        -----------------------------------|---
        `/uk/libukp/scale_to_zero_disable` | Allows to temporarily disable scale-to-zero

        The `scale_to_zero_disable` pseudo file keeps track of the count of concurrent disable requests.
        If the count is `0`, scale-to-zero is **not** disabled<sup>1</sup>, any number larger than `0` means scale-to-zero is temporarily disabled.
        Using a count instead of a boolean value gives multiple independent workers of your application the ability to disable scale-to-zero individually by incrementing and decrementing the count without having to synchronize.

        Reading the file returns the current count.
        The value is prefixed with an equals sign (i.e., `=X` with `X` being the current count).
        Writing to the file modifies the count.
        The following strings are accepted:

        String | Description
        -------|---
        `+`    | Increment the current count by one
        `-`    | Decrement the current count by one
        `=X`   | Set the count to `X`
        `+X`   | Increment the current count by `X`
        `-X`   | Decrement the current count by `X`

        Any attempt to write an invalid string to the file returns an `EINVAL` error.
        Any attempt to set a count less than `0` or larger than `2^64` returns an `ERANGE` error.

        :::caution
        Writing to the file to disable scale-to-zero does **not** atomically disable scale-to-zero.
        There can be a short delay (usually a few milliseconds) until changing the value is communicated to the Unikraft Cloud controller which is responsible for making scale-to-zero decisions.
        Make sure to configure a cooldown time large enough to accomodate for potential signal delay.
        :::

        <small>
        <sup>1</sup>This is never the case for ports of your service that have the `http` handler set.<br/>
        <sup>2</sup>If it is actually enabled depends on the instance configuration.<br/>
        </small>

        #### Stateful Scale-To-Zero <a name="scaletozero_stateful"></a>

        If your application has a long cold boot phase or suffers from large first response latency, for example, to run JIT compilation and fill caches, using stateful scale-to-zero can dramatically reduce the response time of your service.
        With stateful scale-to-zero Unikraft Cloud takes a snapshot of the instance state before putting it into standby.
        When incoming network traffic triggers a wakeup, the snapshot is loaded and the instance resumes execution where it left off - with caches already warm.

        As the name suggests, stateful scale-to-zero can also be used to enable scale-to-zero for applications that need to keep state for functional correctness, even if cold boot times are no concern.

        :::note
        The time to load an instance snapshot is roughly constant and usually in the order of a few milliseconds.
        This is what is reported in the various boot time metrics.
        However, the actual memory contents is loaded from the snapshot only at first access.
        This is to reduce response latency by loading only what is really necessary to process the request at hand.
        This means that the first few requests might take longer until all required memory has been brought back.<br/><br/>

        The time to take an instance snapshot during scale-to-zero depends on the amount of memory touched by the application since it was last started.
        :::
    - name: services
      description: |
        Unikraft Cloud uses *services* to implement publishing network services and creating load balanced services.

        A service has a public DNS name such as `my-project.fra0.kraft.host`.
        If you do not specify a DNS name when you create a service, Unikraft Cloud generates a random DNS name of the form `young-monkey-uq6dxq0u.fra0.kraft.host`.
        When you assign an instance to a service, the instance becomes accessible from the Internet using this DNS name.
        Unikraft Cloud also supports [custom domains](/docs/api/v1/certificates) like `www.example.com` and wildcard domains like `*.example.com`.

        :::note
        Except for unencrypted HTTP traffic on port 80, Unikraft Cloud accepts only TLS connections from the Internet.
        It uses Server Name Indication (SNI) to forward inbound traffic to your application.
        :::

        By default, a service does not publish any network ports.
        To allow traffic to pass to the instances in a service, you have to explicitly specify the network ports to publish.
        For example, if you run a web server you would publish port 443 (HTTPS) and/or port 80 (HTTP).
        You can also redirect port 80 (HTTP) to port 443 (HTTPS).

        ### Connection Handlers <a id="handlers"></a>

        Unikraft Cloud uses connection handlers to decide how to forward connections from the Internet to your application.
        You configure the handlers for every published service port individually.
        The following handlers are available:

        Handler    | Description
        -----------|---
        `tls`      | Terminate the TLS connection at the Unikraft Cloud gateway using our wildcard certificate issued for the `kraft.cloud` domain. The gateway forwards the unencrypted traffic to your application
        `http`     | Enable HTTP mode on the load balancer to load balance on the level of individual HTTP requests. In this mode, only HTTP connections are accepted. If this option is not set the load balancer works in TCP mode and balances TCP connections
        `redirect` | Redirect traffic from the source port to the destination port

        Currently, there is a set of constraints when publishing ports:

        - Port 80: *Must* have `http` and *must not* have `tls` set
        - Port 443: *Must* have `http` and `tls` set
        - The `redirect` handler can only be set on port 80 (HTTP) to redirect to port 443 (HTTPS)
        - All other ports *must* have `tls` and *must not* have `http` set

        ### Load Balancing

        Load balancing in Unikraft Cloud is very easy.
        As soon as you attach more than one instance to a service, Unikraft Cloud will start balancing traffic between them.
        Therefore, only instances publishing the same ports must be part of the same service.

        You can remove instances from a service at any time.
        Unikraft Cloud will immediately take the instance out of the load balancing.

        If you want to make sure that no existing connections are dropped when stopping an instance, use the draining feature of the [PUT /v1/instances/stop](/docs/api/v1/instances#stop) endpoint.

        #### Soft-/Hard Limits <a id="limits"></a>

        Services have soft and hard limits for the number of concurrent requests and connections.
        The limits are applied **per instance**.
        For HTTP services (i.e., the `http` [handler](#handlers) is set) each individual in-flight request is accounted against the limit, but not the underlying TCP connection.
        For TCP services the individual open connections are counted.
        In the following, we use the term request to refer to both requests and connections.

        The soft limit is used by the Unikraft Cloud load balancer to decide when to wake up another [standby](/docs/api/v1/instances#states) instance.
        For example, if the soft limit is set to 5 and the service consists of 2 standby instances, one of the instances receives up to 5 concurrent requests.
        The 6th parallel requests wakes up the second instance.
        If there are no more standby instances to wake up, the number of requests assigned to each instance will exceed the soft limit.
        The load balancer makes sure that when the number of in-flight requests goes down again, instances are put into standby as fast as possible.

        The hard limit defines the maximum number of concurrent requests that an instance can handle.
        The load balancer will never assign more requests to a single instance.
        In case there are no other instances available, excess requests fail (i.e., they are blocked and **not queued**).

        ### Persistence

        When a service is implicitly created as part of a new instance (see [POST /v1/instances](/docs/api/v1/instances#create)) it exists only as long as its owning instance exists.

        In contrast, services that you explicitly create using the [`POST /v1/services`](#create) endpoint are persistent and are not automatically deleted when the last instance leaves the service.
        You need to delete them with the [`DELETE /v1/services`](#delete) endpoint.

        When you attach a second instance to an implicitly created service, Unikraft Cloud re-configures the service to be persistent from that point on.
    - name: users
      description: |
        Information about user accounts.
    - name: volumes
      description: |
        Unikraft Cloud allows you create persistent volumes.

        ### InitRds vs. Volumes

        Initrd (initial ramdisk) and actual volumes serve different purposes.
        An initrd is a file system loaded into memory during the boot process of the instance.
        Any new files created as well as any modifications made to files in the initrd are lost when the instance is stopped.
        In contrast, a volume is a persistent storage device that keeps data across restarts.
        In addition, it can be initialized with a set of files with one instance and then be detached and attached to a another one.

        ### Volume States <a id="states"></a>

        A volume can be in one of the following states:

        State           | Description
        ----------------|---
        `uninitialized` | The volume is scheduled to be created
        `initializing`  | The volume is currently created and formatted
        `available`     | The volume is healthy and available to be [`attached`](#attach) to an instance
        `idle`          | The volume is healthy and attached to an instance. It is possible to [`detach`](#detach) it in this state
        `mounted`       | The volume is currently mounted in an instance
        `busy`          | There are maintenance tasks running on the volume
        `error`         | The volume is in an error state that needs inspection by a Unikraft Cloud engineer

        These are reported as volume `state` by the endpoints.
